[{"path":"https://simulations-plus.github.io/dmcognigen/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Simulations Plus Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"detect-missing-variables-from-environment","dir":"Articles","previous_headings":"","what":"Detect missing variables from environment","title":"Calculations","text":"expected variables missing, attempt made detect environment. calculation function checks calling environment missing variables case-insensitive match. error raised either match found one match found. single match found, used user notified.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"source-datasets","dir":"Articles","previous_headings":"","what":"Source datasets","title":"Calculations","text":"examples testing, calculation-ready sample datasets incorporated package.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"dmcognigen_cov","dir":"Articles","previous_headings":"Source datasets","what":"dmcognigen_cov","title":"Calculations","text":"dmcognigen_cov dataset data.frame demographic/covariate information. contains variables required calculation functions.","code":"glimpse(dmcognigen_cov) #> Rows: 254 #> Columns: 53 #> $ DOMAIN   <chr> \"DM\", \"DM\", \"DM\", \"DM\", \"DM\", \"DM\", \"DM\", \"DM\", \"DM\", \"DM\", \"… #> $ STUDYID  <chr> \"CDISCPILOT01\", \"CDISCPILOT01\", \"CDISCPILOT01\", \"CDISCPILOT01… #> $ USUBJID  <chr> \"01-701-1015\", \"01-701-1023\", \"01-701-1028\", \"01-701-1033\", \"… #> $ ID       <dbl> 10101, 10102, 10103, 10104, 10105, 10106, 10108, 10109, 10110… #> $ RACEN    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1… #> $ RACEC    <chr> \"White/Caucasian\", \"White/Caucasian\", \"White/Caucasian\", \"Whi… #> $ SEXF     <dbl> 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1… #> $ SEXFC    <chr> \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"Male\",… #> $ HTCM     <dbl> 147.32, 162.56, 177.80, 175.26, 154.94, 148.59, 168.91, 158.2… #> $ WTKG     <dbl> 54.43, 80.29, 99.34, 88.45, 62.60, 67.13, 78.02, 59.88, 78.93… #> $ AST      <dbl> 40, 21, 24, 20, 23, 25, 19, 28, 26, 15, 24, 27, 14, 25, 24, 2… #> $ ASTULN   <dbl> 34, 36, 36, 36, 34, 34, 36, 34, 36, 36, 36, 34, 34, 36, 34, 3… #> $ SCR      <dbl> 0.9, 1.4, 1.4, 1.5, 1.0, 1.0, 1.4, 0.9, 1.3, 1.0, 1.4, 1.1, 0… #> $ SCRULN   <dbl> 1.4, 1.6, 1.6, 1.6, 1.4, 1.4, 1.6, 1.4, 1.6, 1.6, 1.6, 1.4, 1… #> $ TBIL     <dbl> 0.6, 0.7, 1.1, 0.8, 0.6, 0.4, 0.4, 0.4, 0.5, 0.7, 0.5, 0.9, 0… #> $ TBILULN  <dbl> 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1… #> $ ASTCAT   <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ BMI      <dbl> 25.07927, 30.38324, 31.42394, 28.79600, 26.07638, 30.40447, 2… #> $ BSA      <dbl> 1.514484, 1.928392, 2.234674, 2.092314, 1.662531, 1.693187, 1… #> $ IBW      <dbl> 45.37000, 59.05000, 70.15000, 68.30000, 50.32000, 46.19500, 6… #> $ CRCL     <dbl> 54.97598, 60.53611, 68.00060, 54.05278, 46.55875, 43.58788, 5… #> $ CRCLP    <dbl> 54.97598, 44.52183, 48.01935, 41.73889, 37.42550, 29.99467, 4… #> $ EGFR     <dbl> 63.23827, 51.02133, 49.95752, 45.74827, 53.76310, 52.69506, 5… #> $ EGFRSCHW <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ IBWCHILD <dbl> 35.81025, 43.60249, 52.16119, 50.68151, 39.61057, 36.43033, 4… #> $ LBM      <dbl> 38.03714, 57.09378, 69.31683, 64.69332, 42.82276, 41.62153, 5… #> $ TBILCAT  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ RFCAT    <dbl> 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 2, 2, 3, 3, 3, NA, 2, 2, … #> $ RFCATC   <chr> \"Mild Impairment (60-89 mL/min)\", \"Moderate Impairment (30-59… #> $ NCILIV   <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ NCILIVC  <chr> \"Mild Group B1\", \"Normal Group A\", \"Normal Group A\", \"Normal … #> $ SUBJID   <chr> \"1015\", \"1023\", \"1028\", \"1033\", \"1034\", \"1047\", \"1097\", \"1111… #> $ RFSTDTC  <chr> \"2014-01-02\", \"2012-08-05\", \"2013-07-19\", \"2014-03-18\", \"2014… #> $ RFENDTC  <chr> \"2014-07-02\", \"2012-09-02\", \"2014-01-14\", \"2014-04-14\", \"2014… #> $ RFXSTDTC <chr> \"2014-01-02\", \"2012-08-05\", \"2013-07-19\", \"2014-03-18\", \"2014… #> $ RFXENDTC <chr> \"2014-07-02\", \"2012-09-01\", \"2014-01-14\", \"2014-03-31\", \"2014… #> $ RFICDTC  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ RFPENDTC <chr> \"2014-07-02T11:45\", \"2013-02-18\", \"2014-01-14T11:10\", \"2014-0… #> $ DTHDTC   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ DTHFL    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ SITEID   <chr> \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\"… #> $ AGE      <dbl> 63, 64, 71, 74, 77, 85, 68, 81, 84, 52, 84, 81, 75, 57, 79, 5… #> $ AGEU     <chr> \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\"… #> $ SEX      <chr> \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"M\", \"F\", \"M\", \"M\", \"M\", \"F\", \"… #> $ RACE     <chr> \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\"… #> $ ETHNIC   <chr> \"HISPANIC OR LATINO\", \"HISPANIC OR LATINO\", \"NOT HISPANIC OR … #> $ ARMCD    <chr> \"Pbo\", \"Pbo\", \"Xan_Hi\", \"Xan_Lo\", \"Xan_Hi\", \"Pbo\", \"Xan_Lo\", … #> $ ARM      <chr> \"Placebo\", \"Placebo\", \"Xanomeline High Dose\", \"Xanomeline Low… #> $ ACTARMCD <chr> \"Pbo\", \"Pbo\", \"Xan_Hi\", \"Xan_Lo\", \"Xan_Hi\", \"Pbo\", \"Xan_Lo\", … #> $ ACTARM   <chr> \"Placebo\", \"Placebo\", \"Xanomeline High Dose\", \"Xanomeline Low… #> $ COUNTRY  <chr> \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\"… #> $ DMDTC    <chr> \"2013-12-26\", \"2012-07-22\", \"2013-07-11\", \"2014-03-10\", \"2014… #> $ DMDY     <dbl> -7, -14, -8, -8, -7, -21, -9, -13, -7, -13, -6, -5, -13, -9, …"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"dmcognigen_conc","dir":"Articles","previous_headings":"Source datasets","what":"dmcognigen_conc","title":"Calculations","text":"dmcognigen_conc dataset data.frame concentration variables.","code":"glimpse(dmcognigen_conc) #> Rows: 3,556 #> Columns: 30 #> $ DOMAIN   <chr> \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"… #> $ STUDYID  <chr> \"CDISCPILOT01\", \"CDISCPILOT01\", \"CDISCPILOT01\", \"CDISCPILOT01… #> $ USUBJID  <chr> \"01-701-1015\", \"01-701-1015\", \"01-701-1015\", \"01-701-1015\", \"… #> $ DVID     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ DVIDC    <chr> \"Xanomeline Concentration (ug/mL)\", \"Xanomeline Concentration… #> $ EVID     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ MDV      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ DV       <dbl> 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005… #> $ LOGDV    <dbl> -5.298317, -5.298317, -5.298317, -5.298317, -5.298317, -5.298… #> $ BLQFN    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ LLOQ     <dbl> 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0… #> $ DTTM     <dttm> 2014-01-01 23:30:00, 2014-01-02 00:05:00, 2014-01-02 00:30:0… #> $ DAY      <dbl> -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, -1, 1, 1, 1, 1, 1,… #> $ PCSEQ    <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5,… #> $ PCTESTCD <chr> \"XAN\", \"XAN\", \"XAN\", \"XAN\", \"XAN\", \"XAN\", \"XAN\", \"XAN\", \"XAN\"… #> $ PCTEST   <chr> \"XANOMELINE\", \"XANOMELINE\", \"XANOMELINE\", \"XANOMELINE\", \"XANO… #> $ PCORRES  <chr> \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ… #> $ PCORRESU <chr> \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\"… #> $ PCSTRESC <chr> \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ\", \"<BLQ… #> $ PCSTRESN <dbl> 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 0, NA,… #> $ PCSTRESU <chr> \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\", \"ug/ml\"… #> $ PCNAM    <chr> \"Imaginary Labs\", \"Imaginary Labs\", \"Imaginary Labs\", \"Imagin… #> $ PCSPEC   <chr> \"PLASMA\", \"PLASMA\", \"PLASMA\", \"PLASMA\", \"PLASMA\", \"PLASMA\", \"… #> $ PCLLOQ   <dbl> 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0… #> $ VISIT    <chr> \"BASELINE\", \"BASELINE\", \"BASELINE\", \"BASELINE\", \"BASELINE\", \"… #> $ VISITNUM <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3… #> $ PCDTC    <chr> \"2014-01-01T23:30:00\", \"2014-01-02T00:05:00\", \"2014-01-02T00:… #> $ PCDY     <dbl> -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, -1, 1, 1, 1, 1, 1,… #> $ PCTPT    <chr> \"Pre-dose\", \"5 Min Post-dose\", \"30 Min Post-dose\", \"1h Post-d… #> $ PCTPTNUM <dbl> -0.50, 0.08, 0.50, 1.00, 1.50, 2.00, 4.00, 6.00, 8.00, 12.00,…"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Calculations","text":"function performs calculations according formula, function can used calculate baseline time-varying versions variable. instance, calculate_bmi can calculate BMI (baseline) BMIT (time-varying). provide time varying WTKG HTCM, result time-varying. function prints formula used readable format.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_crcl","dir":"Articles","previous_headings":"Functions","what":"calculate_crcl()","title":"Calculations","text":"Calculate Creatinine Clearance (CrCl), measure renal function based age, weight, gender, serum creatinine. Cockcroft Gault Formula. function returns numeric vector length inputs. Following inputs: age: Age (y). Numeric vector. wtkg: Weight (kg). Numeric vector. scr: Serum Creatinine (mg/dL). Numeric vector. sexf: Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":"Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples","dir":"Articles","previous_headings":"Functions > calculate_crcl()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     CRCL = calculate_crcl(       age = AGE,       scr = SCR,       sexf = SEXF,       wtkg = WTKG     )   ) %>%    select(USUBJID, AGE, SCR, SEXF, WTKG, CRCL) #> Formula to calculate CRCL:  #>   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) #>   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 6 #>    USUBJID       AGE   SCR  SEXF  WTKG  CRCL #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63   0.9     1  54.4  55.0 #>  2 01-701-1023    64   1.4     0  80.3  60.5 #>  3 01-701-1028    71   1.4     0  99.3  68.0 #>  4 01-701-1033    74   1.5     0  88.4  54.1 #>  5 01-701-1034    77   1       1  62.6  46.6 #>  6 01-701-1047    85   1       1  67.1  43.6 #>  7 01-701-1097    68   1.4     0  78.0  55.7 #>  8 01-701-1111    81   0.9     1  59.9  46.3 #>  9 01-701-1115    84   1.3     0  78.9  47.2 #> 10 01-701-1118    52   1       0  71.2  87.0 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     CRCL = calculate_crcl()   ) %>%    select(USUBJID, AGE, SCR, SEXF, WTKG, CRCL) #> AGE variable found and used for the age argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate CRCL:  #>   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) #>   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 6 #>    USUBJID       AGE   SCR  SEXF  WTKG  CRCL #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63   0.9     1  54.4  55.0 #>  2 01-701-1023    64   1.4     0  80.3  60.5 #>  3 01-701-1028    71   1.4     0  99.3  68.0 #>  4 01-701-1033    74   1.5     0  88.4  54.1 #>  5 01-701-1034    77   1       1  62.6  46.6 #>  6 01-701-1047    85   1       1  67.1  43.6 #>  7 01-701-1097    68   1.4     0  78.0  55.7 #>  8 01-701-1111    81   0.9     1  59.9  46.3 #>  9 01-701-1115    84   1.3     0  78.9  47.2 #> 10 01-701-1118    52   1       0  71.2  87.0 #> # ℹ 244 more rows  dmcognigen_cov %>%    mutate(     CRCL = calculate_crcl(age = AGE)   ) %>%    select(USUBJID, AGE, SCR, SEXF, WTKG, CRCL) #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate CRCL:  #>   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) #>   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 6 #>    USUBJID       AGE   SCR  SEXF  WTKG  CRCL #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63   0.9     1  54.4  55.0 #>  2 01-701-1023    64   1.4     0  80.3  60.5 #>  3 01-701-1028    71   1.4     0  99.3  68.0 #>  4 01-701-1033    74   1.5     0  88.4  54.1 #>  5 01-701-1034    77   1       1  62.6  46.6 #>  6 01-701-1047    85   1       1  67.1  43.6 #>  7 01-701-1097    68   1.4     0  78.0  55.7 #>  8 01-701-1111    81   0.9     1  59.9  46.3 #>  9 01-701-1115    84   1.3     0  78.9  47.2 #> 10 01-701-1118    52   1       0  71.2  87.0 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_crcl_peck","dir":"Articles","previous_headings":"Functions","what":"calculate_crcl_peck()","title":"Calculations","text":"Calculate Creatinine Clearance (CrCl) using Peck Formula, measure renal function based age, ideal weight, gender, serum creatinine function returns numeric vector length inputs. Following inputs: age: Age (y). Numeric vector. crcl: Creatinine Clearance (mL/min) ibw: Ideal Body Weight (kg). Numeric vector. scr: Serum Creatinine (mg/dL). Numeric vector. sexf: Sex. Numeric vector including values 0 /1. 0=Male; 1=Female. wtkg: Weight (kg). Numeric vector.","code":"If WTKG [kg] < 120% of IBW [kg], CRCL [mL/min] = CRCL [mL/min] (Cockroft & Gault) If WTKG [kg] >= 120% of IBW [kg]:   Males: CRCL [mL/min] = ((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])   Females: CRCL [mL/min] = (((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])) × 0.85"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-1","dir":"Articles","previous_headings":"Functions > calculate_crcl_peck()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     CRCLP = calculate_crcl_peck(       age = AGE,       crcl = CRCL,       ibw = IBW,       scr = SCR,       sexf = SEXF,       wtkg = WTKG     )   ) %>%    select(USUBJID, AGE, CRCL, IBW, SCR, SEXF, WTKG, CRCLP) #> Formula to calculate CRCL_PECK:  #>   If WTKG [kg] < 120% of IBW [kg], CRCL [mL/min] = CRCL [mL/min] (Cockroft & Gault) #>   If WTKG [kg] >= 120% of IBW [kg]: #>     Males: CRCL [mL/min] = ((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL]) #>     Females: CRCL [mL/min] = (((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 8 #>    USUBJID       AGE  CRCL   IBW   SCR  SEXF  WTKG CRCLP #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63  55.0  45.4   0.9     1  54.4  55.0 #>  2 01-701-1023    64  60.5  59.0   1.4     0  80.3  44.5 #>  3 01-701-1028    71  68.0  70.2   1.4     0  99.3  48.0 #>  4 01-701-1033    74  54.1  68.3   1.5     0  88.4  41.7 #>  5 01-701-1034    77  46.6  50.3   1       1  62.6  37.4 #>  6 01-701-1047    85  43.6  46.2   1       1  67.1  30.0 #>  7 01-701-1097    68  55.7  63.7   1.4     0  78.0  45.5 #>  8 01-701-1111    81  46.3  52.5   0.9     1  59.9  46.3 #>  9 01-701-1115    84  47.2  72.9   1.3     0  78.9  47.2 #> 10 01-701-1118    52  87.0  72     1       0  71.2  87.0 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     CRCLP = calculate_crcl_peck()   ) %>%    select(USUBJID, AGE, CRCL, IBW, SCR, SEXF, WTKG, CRCLP) #> AGE variable found and used for the age argument. #> CRCL variable found and used for the crcl argument. #> IBW variable found and used for the ibw argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate CRCL_PECK:  #>   If WTKG [kg] < 120% of IBW [kg], CRCL [mL/min] = CRCL [mL/min] (Cockroft & Gault) #>   If WTKG [kg] >= 120% of IBW [kg]: #>     Males: CRCL [mL/min] = ((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL]) #>     Females: CRCL [mL/min] = (((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 8 #>    USUBJID       AGE  CRCL   IBW   SCR  SEXF  WTKG CRCLP #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63  55.0  45.4   0.9     1  54.4  55.0 #>  2 01-701-1023    64  60.5  59.0   1.4     0  80.3  44.5 #>  3 01-701-1028    71  68.0  70.2   1.4     0  99.3  48.0 #>  4 01-701-1033    74  54.1  68.3   1.5     0  88.4  41.7 #>  5 01-701-1034    77  46.6  50.3   1       1  62.6  37.4 #>  6 01-701-1047    85  43.6  46.2   1       1  67.1  30.0 #>  7 01-701-1097    68  55.7  63.7   1.4     0  78.0  45.5 #>  8 01-701-1111    81  46.3  52.5   0.9     1  59.9  46.3 #>  9 01-701-1115    84  47.2  72.9   1.3     0  78.9  47.2 #> 10 01-701-1118    52  87.0  72     1       0  71.2  87.0 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_bmi","dir":"Articles","previous_headings":"Functions","what":"calculate_bmi()","title":"Calculations","text":"Calculate Body Mass Index (BMI). BMI measure body fat based height weight function returns numeric vector length inputs. Following inputs: htcm: Height (cm). Numeric vector. wtkg: Weight (kg). Numeric vector.","code":"BMI [kg/m^2] = WTKG [kg] ÷ (HTCM [cm] ÷ 100) ^ 2"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-2","dir":"Articles","previous_headings":"Functions > calculate_bmi()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     BMI = calculate_bmi(       htcm = HTCM,       wtkg = WTKG      )   ) %>%    select(USUBJID, HTCM, WTKG, BMI) #> Formula to calculate BMI:  #>   BMI [kg/m^2] = WTKG [kg] ÷ (HTCM [cm] ÷ 100) ^ 2 #> # A tibble: 254 × 4 #>    USUBJID      HTCM  WTKG   BMI #>    <chr>       <dbl> <dbl> <dbl> #>  1 01-701-1015  147.  54.4  25.1 #>  2 01-701-1023  163.  80.3  30.4 #>  3 01-701-1028  178.  99.3  31.4 #>  4 01-701-1033  175.  88.4  28.8 #>  5 01-701-1034  155.  62.6  26.1 #>  6 01-701-1047  149.  67.1  30.4 #>  7 01-701-1097  169.  78.0  27.3 #>  8 01-701-1111  158.  59.9  23.9 #>  9 01-701-1115  182.  78.9  23.9 #> 10 01-701-1118  180.  71.2  21.9 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     BMI = calculate_bmi()   ) %>%    select(USUBJID, HTCM, WTKG, BMI) #> HTCM variable found and used for the htcm argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate BMI:  #>   BMI [kg/m^2] = WTKG [kg] ÷ (HTCM [cm] ÷ 100) ^ 2 #> # A tibble: 254 × 4 #>    USUBJID      HTCM  WTKG   BMI #>    <chr>       <dbl> <dbl> <dbl> #>  1 01-701-1015  147.  54.4  25.1 #>  2 01-701-1023  163.  80.3  30.4 #>  3 01-701-1028  178.  99.3  31.4 #>  4 01-701-1033  175.  88.4  28.8 #>  5 01-701-1034  155.  62.6  26.1 #>  6 01-701-1047  149.  67.1  30.4 #>  7 01-701-1097  169.  78.0  27.3 #>  8 01-701-1111  158.  59.9  23.9 #>  9 01-701-1115  182.  78.9  23.9 #> 10 01-701-1118  180.  71.2  21.9 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_bsa","dir":"Articles","previous_headings":"Functions","what":"calculate_bsa()","title":"Calculations","text":"Calculate Body Surface Area (BSA). Body Surface Area measure body fat based height weight function returns numeric vector length inputs. Following inputs: htcm: Height (cm). Numeric vector. wtkg: Weight (kg). Numeric vector.","code":"BSA [m^2] = ((HTCM [cm]) ^ 0.42246 * (WTKG [kg]) ^ 0.51456) * 0.0235"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-3","dir":"Articles","previous_headings":"Functions > calculate_bsa()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     BSA = calculate_bsa(       htcm = HTCM,        wtkg = WTKG     )   ) %>%    select(USUBJID, HTCM, WTKG, BSA) #> Formula to calculate BSA:  #>   BSA [m^2] = ((HTCM [cm]) ^ 0.42246 * (WTKG [kg]) ^ 0.51456) * 0.0235 #> # A tibble: 254 × 4 #>    USUBJID      HTCM  WTKG   BSA #>    <chr>       <dbl> <dbl> <dbl> #>  1 01-701-1015  147.  54.4  1.51 #>  2 01-701-1023  163.  80.3  1.93 #>  3 01-701-1028  178.  99.3  2.23 #>  4 01-701-1033  175.  88.4  2.09 #>  5 01-701-1034  155.  62.6  1.66 #>  6 01-701-1047  149.  67.1  1.69 #>  7 01-701-1097  169.  78.0  1.93 #>  8 01-701-1111  158.  59.9  1.64 #>  9 01-701-1115  182.  78.9  2.00 #> 10 01-701-1118  180.  71.2  1.89 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     BSA = calculate_bsa()   ) %>%    select(USUBJID, HTCM, WTKG, BSA) #> HTCM variable found and used for the htcm argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate BSA:  #>   BSA [m^2] = ((HTCM [cm]) ^ 0.42246 * (WTKG [kg]) ^ 0.51456) * 0.0235 #> # A tibble: 254 × 4 #>    USUBJID      HTCM  WTKG   BSA #>    <chr>       <dbl> <dbl> <dbl> #>  1 01-701-1015  147.  54.4  1.51 #>  2 01-701-1023  163.  80.3  1.93 #>  3 01-701-1028  178.  99.3  2.23 #>  4 01-701-1033  175.  88.4  2.09 #>  5 01-701-1034  155.  62.6  1.66 #>  6 01-701-1047  149.  67.1  1.69 #>  7 01-701-1097  169.  78.0  1.93 #>  8 01-701-1111  158.  59.9  1.64 #>  9 01-701-1115  182.  78.9  2.00 #> 10 01-701-1118  180.  71.2  1.89 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_lbm","dir":"Articles","previous_headings":"Functions","what":"calculate_lbm()","title":"Calculations","text":"Calculate Lean Body Mass (LBM), estimation much someone weighs without body fat; much persons bones, organs muscles weigh function returns numeric vector length inputs. Following inputs: htcm: Height (cm). Numeric vector. sexf: Sex. Numeric vector including values 0 /1. 0=Male; 1=Female. wtkg: Weight (kg). Numeric vector.","code":"Males: LBM [kg] = (1.10 × WTKG [kg]) - 128 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) Females: LBM [kg] = (1.07 × WTKG [kg]) - 148 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2)"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-4","dir":"Articles","previous_headings":"Functions > calculate_lbm()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     LBM = calculate_lbm(       htcm = HTCM,       sexf = SEXF,       wtkg = WTKG     )   ) %>%    select(USUBJID, HTCM, SEXF, WTKG, LBM) #> Formula to calculate LBM:  #>   Males: LBM [kg] = (1.10 × WTKG [kg]) - 128 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #>   Females: LBM [kg] = (1.07 × WTKG [kg]) - 148 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #> # A tibble: 254 × 5 #>    USUBJID      HTCM  SEXF  WTKG   LBM #>    <chr>       <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015  147.     1  54.4  38.0 #>  2 01-701-1023  163.     0  80.3  57.1 #>  3 01-701-1028  178.     0  99.3  69.3 #>  4 01-701-1033  175.     0  88.4  64.7 #>  5 01-701-1034  155.     1  62.6  42.8 #>  6 01-701-1047  149.     1  67.1  41.6 #>  7 01-701-1097  169.     0  78.0  58.5 #>  8 01-701-1111  158.     1  59.9  42.9 #>  9 01-701-1115  182.     0  78.9  62.6 #> 10 01-701-1118  180.     0  71.2  58.4 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     LBM = calculate_lbm()   ) %>%    select(USUBJID, HTCM, SEXF, WTKG, LBM) #> HTCM variable found and used for the htcm argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate LBM:  #>   Males: LBM [kg] = (1.10 × WTKG [kg]) - 128 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #>   Females: LBM [kg] = (1.07 × WTKG [kg]) - 148 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #> # A tibble: 254 × 5 #>    USUBJID      HTCM  SEXF  WTKG   LBM #>    <chr>       <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015  147.     1  54.4  38.0 #>  2 01-701-1023  163.     0  80.3  57.1 #>  3 01-701-1028  178.     0  99.3  69.3 #>  4 01-701-1033  175.     0  88.4  64.7 #>  5 01-701-1034  155.     1  62.6  42.8 #>  6 01-701-1047  149.     1  67.1  41.6 #>  7 01-701-1097  169.     0  78.0  58.5 #>  8 01-701-1111  158.     1  59.9  42.9 #>  9 01-701-1115  182.     0  78.9  62.6 #> 10 01-701-1118  180.     0  71.2  58.4 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_ibw","dir":"Articles","previous_headings":"Functions","what":"calculate_ibw()","title":"Calculations","text":"Calculate Ideal Body Weight (IBW), measure potential body fat based height function returns numeric vector length inputs. Following inputs: htcm: Height (cm). Numeric vector. sexf: Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":"Males: IBW [kg] = 51.65 [kg] + 1.85 [kg] × ((HTCM [cm] ÷ 2.54) - 60) Females: IBW [kg] = 48.67 [kg] + 1.65 [kg] × ((HTCM [cm] ÷ 2.54) - 60)"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-5","dir":"Articles","previous_headings":"Functions > calculate_ibw()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     IBW = calculate_ibw(       htcm = HTCM,       sexf = SEXF      )   ) %>%    select(USUBJID, HTCM, SEXF, IBW) #> Formula to calculate IBW:  #>   Males: IBW [kg] = 51.65 [kg] + 1.85 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #>   Females: IBW [kg] = 48.67 [kg] + 1.65 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #> # A tibble: 254 × 4 #>    USUBJID      HTCM  SEXF   IBW #>    <chr>       <dbl> <dbl> <dbl> #>  1 01-701-1015  147.     1  45.4 #>  2 01-701-1023  163.     0  59.0 #>  3 01-701-1028  178.     0  70.2 #>  4 01-701-1033  175.     0  68.3 #>  5 01-701-1034  155.     1  50.3 #>  6 01-701-1047  149.     1  46.2 #>  7 01-701-1097  169.     0  63.7 #>  8 01-701-1111  158.     1  52.5 #>  9 01-701-1115  182.     0  72.9 #> 10 01-701-1118  180.     0  72   #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     IBW = calculate_ibw()   ) %>%    select(USUBJID, HTCM, SEXF, IBW) #> HTCM variable found and used for the htcm argument. #> SEXF variable found and used for the sexf argument. #> Formula to calculate IBW:  #>   Males: IBW [kg] = 51.65 [kg] + 1.85 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #>   Females: IBW [kg] = 48.67 [kg] + 1.65 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #> # A tibble: 254 × 4 #>    USUBJID      HTCM  SEXF   IBW #>    <chr>       <dbl> <dbl> <dbl> #>  1 01-701-1015  147.     1  45.4 #>  2 01-701-1023  163.     0  59.0 #>  3 01-701-1028  178.     0  70.2 #>  4 01-701-1033  175.     0  68.3 #>  5 01-701-1034  155.     1  50.3 #>  6 01-701-1047  149.     1  46.2 #>  7 01-701-1097  169.     0  63.7 #>  8 01-701-1111  158.     1  52.5 #>  9 01-701-1115  182.     0  72.9 #> 10 01-701-1118  180.     0  72   #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_ibw_child","dir":"Articles","previous_headings":"Functions","what":"calculate_ibw_child()","title":"Calculations","text":"Calculate Ideal Body Weight (children), measure potential body fat based height function returns numeric vector length inputs. Following input: age: Age (y). Numeric vector. htcm: Height (cm). Numeric vector.","code":"IBW [kg] = [(HTCM [cm]) ^ 2 × 1.65] ÷ 1000"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-6","dir":"Articles","previous_headings":"Functions > calculate_ibw_child()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     IBWCHILD = calculate_ibw_child(age = AGE, htcm = HTCM)   ) %>%    select(USUBJID, AGE, HTCM, IBWCHILD) #> Formula to calculate IBW_CHILD:  #>   IBW [kg] = [(HTCM [cm]) ^ 2 × 1.65] ÷ 1000 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `IBWCHILD = calculate_ibw_child(age = AGE, htcm = HTCM)`. #> Caused by warning: #> ! Cases where AGE > 18 were detected. This formula is intended for children. #> # A tibble: 254 × 4 #>    USUBJID       AGE  HTCM IBWCHILD #>    <chr>       <dbl> <dbl>    <dbl> #>  1 01-701-1015    63  147.     35.8 #>  2 01-701-1023    64  163.     43.6 #>  3 01-701-1028    71  178.     52.2 #>  4 01-701-1033    74  175.     50.7 #>  5 01-701-1034    77  155.     39.6 #>  6 01-701-1047    85  149.     36.4 #>  7 01-701-1097    68  169.     47.1 #>  8 01-701-1111    81  158.     41.3 #>  9 01-701-1115    84  182.     54.4 #> 10 01-701-1118    52  180.     53.7 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     IBWCHILD = calculate_ibw_child()   ) %>%    select(USUBJID, AGE, HTCM, IBWCHILD) #> AGE variable found and used for the age argument. #> HTCM variable found and used for the htcm argument. #> Formula to calculate IBW_CHILD:  #>   IBW [kg] = [(HTCM [cm]) ^ 2 × 1.65] ÷ 1000 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `IBWCHILD = calculate_ibw_child()`. #> Caused by warning: #> ! Cases where AGE > 18 were detected. This formula is intended for children. #> # A tibble: 254 × 4 #>    USUBJID       AGE  HTCM IBWCHILD #>    <chr>       <dbl> <dbl>    <dbl> #>  1 01-701-1015    63  147.     35.8 #>  2 01-701-1023    64  163.     43.6 #>  3 01-701-1028    71  178.     52.2 #>  4 01-701-1033    74  175.     50.7 #>  5 01-701-1034    77  155.     39.6 #>  6 01-701-1047    85  149.     36.4 #>  7 01-701-1097    68  169.     47.1 #>  8 01-701-1111    81  158.     41.3 #>  9 01-701-1115    84  182.     54.4 #> 10 01-701-1118    52  180.     53.7 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_egfr","dir":"Articles","previous_headings":"Functions","what":"calculate_egfr()","title":"Calculations","text":"Calculate Estimated Glomerular Filtration Rate (eGFR) adults function returns numeric vector length inputs. Following inputs: age: Age (y). Numeric vector. racen: Race. Numeric vector value 2 expected correspond Black/African American. scr: Serum Creatinine (mg/dL). Numeric vector. sexf: Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":"EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American)"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-7","dir":"Articles","previous_headings":"Functions > calculate_egfr()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     EGFR = calculate_egfr(       age = AGE,       racen = RACEN,       scr = SCR,       sexf = SEXF     )   ) %>%    select(USUBJID, AGE, RACEN, SCR, SEXF, EGFR) #> Formula to calculate EGFR:  #>   EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American) #> # A tibble: 254 × 6 #>    USUBJID       AGE RACEN   SCR  SEXF  EGFR #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63     1   0.9     1  63.2 #>  2 01-701-1023    64     1   1.4     0  51.0 #>  3 01-701-1028    71     1   1.4     0  50.0 #>  4 01-701-1033    74     1   1.5     0  45.7 #>  5 01-701-1034    77     1   1       1  53.8 #>  6 01-701-1047    85     1   1       1  52.7 #>  7 01-701-1097    68     1   1.4     0  50.4 #>  8 01-701-1111    81     1   0.9     1  60.1 #>  9 01-701-1115    84     1   1.3     0  52.6 #> 10 01-701-1118    52     1   1       0  78.5 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     EGFR = calculate_egfr()   ) %>%    select(USUBJID, AGE, RACEN, SCR, SEXF, EGFR) #> AGE variable found and used for the age argument. #> RACEN variable found and used for the racen argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> Formula to calculate EGFR:  #>   EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American) #> # A tibble: 254 × 6 #>    USUBJID       AGE RACEN   SCR  SEXF  EGFR #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 01-701-1015    63     1   0.9     1  63.2 #>  2 01-701-1023    64     1   1.4     0  51.0 #>  3 01-701-1028    71     1   1.4     0  50.0 #>  4 01-701-1033    74     1   1.5     0  45.7 #>  5 01-701-1034    77     1   1       1  53.8 #>  6 01-701-1047    85     1   1       1  52.7 #>  7 01-701-1097    68     1   1.4     0  50.4 #>  8 01-701-1111    81     1   0.9     1  60.1 #>  9 01-701-1115    84     1   1.3     0  52.6 #> 10 01-701-1118    52     1   1       0  78.5 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_egfr_child","dir":"Articles","previous_headings":"Functions","what":"calculate_egfr_child()","title":"Calculations","text":"Calculate Estimated Glomerular Filtration Rate (eGFR) Pedatrics using Schwartz formula function returns numeric vector length inputs. Following inputs: age: Age (y). Numeric vector. htcm: Height (cm). Numeric vector. scr: Serum Creatinine (mg/dL). Numeric vector. sexf: Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":"Children (AGE [y] <= 16), where: EGFR = (k * HTCM [cm]) / SCR [mg/dL] k = 0.45 for AGE [y] <= 1 (full term) k = 0.55 for girls 1 < AGE [y] <= 16 k = 0.55 for boys 1 < AGE [y] < 13 k = 0.70 for boys 13 <= AGE [y] <= 16"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-8","dir":"Articles","previous_headings":"Functions > calculate_egfr_child()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     EGFR_CHILD = calculate_egfr_child(       age = AGE,        htcm = HTCM,       scr = SCR,       sexf = SEXF     )   ) %>%    select(USUBJID, AGE, HTCM, SCR, SEXF, EGFR_CHILD) #> Formula to calculate EGFR_CHILD:  #>   Children (AGE [y] <= 16), where: #>   EGFR = (k * HTCM [cm]) / SCR [mg/dL] #>   k = 0.45 for AGE [y] <= 1 (full term) #>   k = 0.55 for girls 1 < AGE [y] <= 16 #>   k = 0.55 for boys 1 < AGE [y] < 13 #>   k = 0.70 for boys 13 <= AGE [y] <= 16 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `EGFR_CHILD = calculate_egfr_child(age = AGE, htcm = HTCM, scr = #>   SCR, sexf = SEXF)`. #> Caused by warning: #> ! Cases where AGE > 16 were detected. This formula is intended for children. #> # A tibble: 254 × 6 #>    USUBJID       AGE  HTCM   SCR  SEXF EGFR_CHILD #>    <chr>       <dbl> <dbl> <dbl> <dbl>      <dbl> #>  1 01-701-1015    63  147.   0.9     1         NA #>  2 01-701-1023    64  163.   1.4     0         NA #>  3 01-701-1028    71  178.   1.4     0         NA #>  4 01-701-1033    74  175.   1.5     0         NA #>  5 01-701-1034    77  155.   1       1         NA #>  6 01-701-1047    85  149.   1       1         NA #>  7 01-701-1097    68  169.   1.4     0         NA #>  8 01-701-1111    81  158.   0.9     1         NA #>  9 01-701-1115    84  182.   1.3     0         NA #> 10 01-701-1118    52  180.   1       0         NA #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     EGFR_CHILD = calculate_egfr_child()   ) %>%    select(USUBJID, AGE, HTCM, SCR, SEXF, EGFR_CHILD) #> AGE variable found and used for the age argument. #> HTCM variable found and used for the htcm argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> Formula to calculate EGFR_CHILD:  #>   Children (AGE [y] <= 16), where: #>   EGFR = (k * HTCM [cm]) / SCR [mg/dL] #>   k = 0.45 for AGE [y] <= 1 (full term) #>   k = 0.55 for girls 1 < AGE [y] <= 16 #>   k = 0.55 for boys 1 < AGE [y] < 13 #>   k = 0.70 for boys 13 <= AGE [y] <= 16 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `EGFR_CHILD = calculate_egfr_child()`. #> Caused by warning: #> ! Cases where AGE > 16 were detected. This formula is intended for children. #> # A tibble: 254 × 6 #>    USUBJID       AGE  HTCM   SCR  SEXF EGFR_CHILD #>    <chr>       <dbl> <dbl> <dbl> <dbl>      <dbl> #>  1 01-701-1015    63  147.   0.9     1         NA #>  2 01-701-1023    64  163.   1.4     0         NA #>  3 01-701-1028    71  178.   1.4     0         NA #>  4 01-701-1033    74  175.   1.5     0         NA #>  5 01-701-1034    77  155.   1       1         NA #>  6 01-701-1047    85  149.   1       1         NA #>  7 01-701-1097    68  169.   1.4     0         NA #>  8 01-701-1111    81  158.   0.9     1         NA #>  9 01-701-1115    84  182.   1.3     0         NA #> 10 01-701-1118    52  180.   1       0         NA #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_rfcat","dir":"Articles","previous_headings":"Functions","what":"calculate_rfcat()","title":"Calculations","text":"Calculate Renal Function Category (RFCAT) function returns numeric vector length inputs. Following input: egfr: Estimated Glomerular Filtration Rate (mL/min/1.73m^2). Numeric vector.","code":"1 = Normal Function (>= 90 mL/min) 2 = Mild Impairment (60-89 mL/min) 3 = Moderate Impairment (30-59 mL/min) 4 = Severe Impairment (15-29 mL/min) 5 = End Stage Disease (< 15 mL/min or Dialysis)"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-9","dir":"Articles","previous_headings":"Functions > calculate_rfcat()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     EGFR = calculate_egfr(       age = AGE,       racen = RACEN,       scr = SCR,       sexf = SEXF     ),     RFCAT = calculate_rfcat(egfr = EGFR)   ) %>%    select(USUBJID, EGFR, RFCAT) #> Formula to calculate EGFR:  #>   EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American) #> Formula to calculate RFCAT:  #>   1 = Normal Function (>= 90 mL/min) #>   2 = Mild Impairment (60-89 mL/min) #>   3 = Moderate Impairment (30-59 mL/min) #>   4 = Severe Impairment (15-29 mL/min) #>   5 = End Stage Disease (< 15 mL/min or Dialysis) #> # A tibble: 254 × 3 #>    USUBJID      EGFR RFCAT #>    <chr>       <dbl> <dbl> #>  1 01-701-1015  63.2     2 #>  2 01-701-1023  51.0     3 #>  3 01-701-1028  50.0     3 #>  4 01-701-1033  45.7     3 #>  5 01-701-1034  53.8     3 #>  6 01-701-1047  52.7     3 #>  7 01-701-1097  50.4     3 #>  8 01-701-1111  60.1     2 #>  9 01-701-1115  52.6     3 #> 10 01-701-1118  78.5     2 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     RFCAT = calculate_rfcat()   ) %>%    select(USUBJID, EGFR, RFCAT) #> EGFR variable found and used for the egfr argument. #> Formula to calculate RFCAT:  #>   1 = Normal Function (>= 90 mL/min) #>   2 = Mild Impairment (60-89 mL/min) #>   3 = Moderate Impairment (30-59 mL/min) #>   4 = Severe Impairment (15-29 mL/min) #>   5 = End Stage Disease (< 15 mL/min or Dialysis) #> # A tibble: 254 × 3 #>    USUBJID      EGFR RFCAT #>    <chr>       <dbl> <dbl> #>  1 01-701-1015  63.2     2 #>  2 01-701-1023  51.0     3 #>  3 01-701-1028  50.0     3 #>  4 01-701-1033  45.7     3 #>  5 01-701-1034  53.8     3 #>  6 01-701-1047  52.7     3 #>  7 01-701-1097  50.4     3 #>  8 01-701-1111  60.1     2 #>  9 01-701-1115  52.6     3 #> 10 01-701-1118  78.5     2 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_tbilcat","dir":"Articles","previous_headings":"Functions","what":"calculate_tbilcat()","title":"Calculations","text":"Calculate Total Bilirubin Category function returns numeric vector length inputs. Following inputs: tbil: Total Bilirubin (mg/dL). Numeric vector. tbiluln: Reference Range Upper Limit (units observed values). Numeric vector.","code":"if TBIL [mg/dL] <= ULN [mg/dL] then TBILCAT = 0 if ULN [mg/dL] < TBIL [mg/dL] <= 1.5 × ULN [mg/dL] then TBILCAT = 1 if 1.5 × ULN [mg/dL] < TBIL [mg/dL] <= 3 × ULN [mg/dL] then TBILCAT = 2 if TBIL [mg/dL] > 3 × ULN [mg/dL] then TBILCAT = 3"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-10","dir":"Articles","previous_headings":"Functions > calculate_tbilcat()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     TBILCAT = calculate_tbilcat(       tbil = TBIL,        tbiluln = TBILULN     )   ) %>%    select(USUBJID, TBIL, TBILULN, TBILCAT) #> Formula to calculate TBILCAT:  #>   if TBIL [mg/dL] <= ULN [mg/dL] then TBILCAT = 0 #>   if ULN [mg/dL] < TBIL [mg/dL] <= 1.5 × ULN [mg/dL] then TBILCAT = 1 #>   if 1.5 × ULN [mg/dL] < TBIL [mg/dL] <= 3 × ULN [mg/dL] then TBILCAT = 2 #>   if TBIL [mg/dL] > 3 × ULN [mg/dL] then TBILCAT = 3 #> # A tibble: 254 × 4 #>    USUBJID      TBIL TBILULN TBILCAT #>    <chr>       <dbl>   <dbl>   <dbl> #>  1 01-701-1015   0.6     1.2       0 #>  2 01-701-1023   0.7     1.2       0 #>  3 01-701-1028   1.1     1.2       0 #>  4 01-701-1033   0.8     1.2       0 #>  5 01-701-1034   0.6     1.2       0 #>  6 01-701-1047   0.4     1.2       0 #>  7 01-701-1097   0.4     1.2       0 #>  8 01-701-1111   0.4     1.2       0 #>  9 01-701-1115   0.5     1.2       0 #> 10 01-701-1118   0.7     1.2       0 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     TBILCAT = calculate_tbilcat()   ) %>%    select(USUBJID, TBIL, TBILULN, TBILCAT) #> TBIL variable found and used for the tbil argument. #> TBILULN variable found and used for the tbiluln argument. #> Formula to calculate TBILCAT:  #>   if TBIL [mg/dL] <= ULN [mg/dL] then TBILCAT = 0 #>   if ULN [mg/dL] < TBIL [mg/dL] <= 1.5 × ULN [mg/dL] then TBILCAT = 1 #>   if 1.5 × ULN [mg/dL] < TBIL [mg/dL] <= 3 × ULN [mg/dL] then TBILCAT = 2 #>   if TBIL [mg/dL] > 3 × ULN [mg/dL] then TBILCAT = 3 #> # A tibble: 254 × 4 #>    USUBJID      TBIL TBILULN TBILCAT #>    <chr>       <dbl>   <dbl>   <dbl> #>  1 01-701-1015   0.6     1.2       0 #>  2 01-701-1023   0.7     1.2       0 #>  3 01-701-1028   1.1     1.2       0 #>  4 01-701-1033   0.8     1.2       0 #>  5 01-701-1034   0.6     1.2       0 #>  6 01-701-1047   0.4     1.2       0 #>  7 01-701-1097   0.4     1.2       0 #>  8 01-701-1111   0.4     1.2       0 #>  9 01-701-1115   0.5     1.2       0 #> 10 01-701-1118   0.7     1.2       0 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_astcat","dir":"Articles","previous_headings":"Functions","what":"calculate_astcat()","title":"Calculations","text":"Calculate Aspartate Aminotransferase Category function returns numeric vector length inputs. Following inputs: ast: Aspartate Aminotransferase (U/L). Numeric vector. astuln: Reference Range Upper Limit (units observed values). Numeric vector.","code":"if AST [U/L] <= ULN [U/L] then ASTCAT = 0 if ULN [U/L] < AST [U/L] then ASTCAT = 1"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-11","dir":"Articles","previous_headings":"Functions > calculate_astcat()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     ASTCAT = calculate_astcat(       ast = AST,        astuln = ASTULN     )   ) %>%    select(USUBJID, AST, ASTULN, ASTCAT) #> Formula to calculate ASTCAT:  #>   if AST [U/L] <= ULN [U/L] then ASTCAT = 0 #>   if ULN [U/L] < AST [U/L] then ASTCAT = 1 #> # A tibble: 254 × 4 #>    USUBJID       AST ASTULN ASTCAT #>    <chr>       <dbl>  <dbl>  <dbl> #>  1 01-701-1015    40     34      1 #>  2 01-701-1023    21     36      0 #>  3 01-701-1028    24     36      0 #>  4 01-701-1033    20     36      0 #>  5 01-701-1034    23     34      0 #>  6 01-701-1047    25     34      0 #>  7 01-701-1097    19     36      0 #>  8 01-701-1111    28     34      0 #>  9 01-701-1115    26     36      0 #> 10 01-701-1118    15     36      0 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     ASTCAT = calculate_astcat()   ) %>%    select(USUBJID, AST, ASTULN, ASTCAT) #> AST variable found and used for the ast argument. #> ASTULN variable found and used for the astuln argument. #> Formula to calculate ASTCAT:  #>   if AST [U/L] <= ULN [U/L] then ASTCAT = 0 #>   if ULN [U/L] < AST [U/L] then ASTCAT = 1 #> # A tibble: 254 × 4 #>    USUBJID       AST ASTULN ASTCAT #>    <chr>       <dbl>  <dbl>  <dbl> #>  1 01-701-1015    40     34      1 #>  2 01-701-1023    21     36      0 #>  3 01-701-1028    24     36      0 #>  4 01-701-1033    20     36      0 #>  5 01-701-1034    23     34      0 #>  6 01-701-1047    25     34      0 #>  7 01-701-1097    19     36      0 #>  8 01-701-1111    28     34      0 #>  9 01-701-1115    26     36      0 #> 10 01-701-1118    15     36      0 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"calculate_nciliv","dir":"Articles","previous_headings":"Functions","what":"calculate_nciliv()","title":"Calculations","text":"Calculate NCI Liver Function Group (NCILIV) function returns numeric vector length inputs. Following inputs: astcat: Aspartate Aminotransferase Category. Numeric vector. tbilcat: Total Bilirubin Category. Numeric vector.","code":"if TBILCAT = 0 and ASTCAT = 0 then NCILIV = 0 if TBILCAT = 0 and ASTCAT = 1 then NCILIV = 1 if TBILCAT = 1 then NCILIV = 2 if TBILCAT = 2 then NCILIV = 3 if TBILCAT = 3 then NCILIV = 4"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/calculations.html","id":"examples-12","dir":"Articles","previous_headings":"Functions > calculate_nciliv()","what":"Examples","title":"Calculations","text":"expected variables provided: expected variables missing. case, function try detect missing variables parent environment:","code":"dmcognigen_cov %>%    mutate(     NCILIV = calculate_nciliv(astcat = ASTCAT, tbilcat = TBILCAT)   ) %>%    select(USUBJID, ASTCAT, TBILCAT, NCILIV) #> Formula to calculate NCILIV:  #>   if TBILCAT = 0 and ASTCAT = 0 then NCILIV = 0 #>   if TBILCAT = 0 and ASTCAT = 1 then NCILIV = 1 #>   if TBILCAT = 1 then NCILIV = 2 #>   if TBILCAT = 2 then NCILIV = 3 #>   if TBILCAT = 3 then NCILIV = 4 #> # A tibble: 254 × 4 #>    USUBJID     ASTCAT TBILCAT NCILIV #>    <chr>        <dbl>   <dbl>  <dbl> #>  1 01-701-1015      1       0      1 #>  2 01-701-1023      0       0      0 #>  3 01-701-1028      0       0      0 #>  4 01-701-1033      0       0      0 #>  5 01-701-1034      0       0      0 #>  6 01-701-1047      0       0      0 #>  7 01-701-1097      0       0      0 #>  8 01-701-1111      0       0      0 #>  9 01-701-1115      0       0      0 #> 10 01-701-1118      0       0      0 #> # ℹ 244 more rows dmcognigen_cov %>%    mutate(     NCILIV = calculate_nciliv()   ) %>%    select(USUBJID, ASTCAT, TBILCAT, NCILIV) #> ASTCAT variable found and used for the astcat argument. #> TBILCAT variable found and used for the tbilcat argument. #> Formula to calculate NCILIV:  #>   if TBILCAT = 0 and ASTCAT = 0 then NCILIV = 0 #>   if TBILCAT = 0 and ASTCAT = 1 then NCILIV = 1 #>   if TBILCAT = 1 then NCILIV = 2 #>   if TBILCAT = 2 then NCILIV = 3 #>   if TBILCAT = 3 then NCILIV = 4 #> # A tibble: 254 × 4 #>    USUBJID     ASTCAT TBILCAT NCILIV #>    <chr>        <dbl>   <dbl>  <dbl> #>  1 01-701-1015      1       0      1 #>  2 01-701-1023      0       0      0 #>  3 01-701-1028      0       0      0 #>  4 01-701-1033      0       0      0 #>  5 01-701-1034      0       0      0 #>  6 01-701-1047      0       0      0 #>  7 01-701-1097      0       0      0 #>  8 01-701-1111      0       0      0 #>  9 01-701-1115      0       0      0 #> 10 01-701-1118      0       0      0 #> # ℹ 244 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Decode Tables","text":"Decode tables (decode_tbls) defined based variable names levels labels. level generally shorthand representation label ideally numeric. label intended detailed description, text display outputs like graphs tables. decode_tbls can used provide specifications functions like set_decode_factors(), join_decode_labels(), join_decode_levels(). example, decode table variable RFCAT (Baseline Renal Fx Category). values left-hand-side equal sign levels values right-hand-side labels.","code":"#>  #> ── RFCAT ── #>  #> 1=Normal Function (>=90 mL/min) #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> 4=Severe Impairment (15-29 mL/min) #> 5=End Stage Disease (<15 mL/min or Dialysis)"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"constructing-decode_tbls","dir":"Articles","previous_headings":"","what":"Constructing decode_tbls","title":"Decode Tables","text":"decode table (decode_tbl) collection decode tables (decode_tbls) can constructed 3 main ways: Based character string describes levels labels. Based variables data. manually constructing data frame(s). decode_tbls can defined many ways, primary intention read_requirements() used define attributes.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"extracting-from-character-strings","dir":"Articles","previous_headings":"Constructing decode_tbls","what":"Extracting from character strings","title":"Decode Tables","text":"method expected used variables decodes presented together table used read_requirements() define \"decode_tbls\" attribute. Like variable descriptions: method, decodes expected type character. entry new line defines one level--label relationship separated equal sign. entry contains one equal sign, first equal sign considered separator. extract decode tables types strings:","code":"#> # A tibble: 9 × 3 #>   variable_name variable_label              format_decode                        #>   <chr>         <chr>                       <chr>                                #> 1 DVID          Observation Type            \"0=Dose\\n1=Xanomeline Concentration… #> 2 EVID          Event ID                    \"0=PK or PD measure\\n1=Dose\\n2=Othe… #> 3 MDV           Missing Dependent Variable  \"0=PK or PD measure\\n1=Dose or Othe… #> 4 BLQFN         BLQ Flag                    \"0=No\\n1=Yes\"                        #> 5 FED           Fed                         \"0=Fasted\\n1=Fed\"                    #> 6 RACEN         Race                        \"1=White/Caucasian\\n2=Black/African… #> 7 SEXF          Sex                         \"0=Male\\n1=Female\"                   #> 8 RFCAT         Baseline Renal Fx Category  \"1=Normal Function (>=90 mL/min)\\n2… #> 9 NCILIV        Baseline NCI Liver Fx Group \"0=Normal Group A\\n1=Mild Group B1\\… #> DVID: #> 0=Dose #> 1=Xanomeline Concentration (ug/mL) #>  #> EVID: #> 0=PK or PD measure #> 1=Dose #> 2=Other #>  #> MDV: #> 0=PK or PD measure #> 1=Dose or Other #>  #> BLQFN: #> 0=No #> 1=Yes #>  #> FED: #> 0=Fasted #> 1=Fed #>  #> RACEN: #> 1=White/Caucasian #> 2=Black/African American #> 3=Asian #> 4=American Indian or Alaska Native #>  #> SEXF: #> 0=Male #> 1=Female #>  #> RFCAT: #> 1=Normal Function (>=90 mL/min) #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> 4=Severe Impairment (15-29 mL/min) #> 5=End Stage Disease (<15 mL/min or Dialysis) #>  #> NCILIV: #> 0=Normal Group A #> 1=Mild Group B1 #> 2=Mild Group B2 #> 3=Moderate Group C #> 4=Severe Group D extract_decode_tbls(   variable_name = requirements$variable_name,   decode = requirements$format_decode ) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── DVID ── #>  #> 0=Dose #> 1=Xanomeline Concentration (ug/mL) #>  #> ── EVID ── #>  #> 0=PK or PD measure #> 1=Dose #> 2=Other #>  #> ── MDV ── #>  #> 0=PK or PD measure #> 1=Dose or Other #>  #> ── BLQFN ── #>  #> 0=No #> 1=Yes #>  #> ── FED ── #>  #> 0=Fasted #> 1=Fed #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 3=Asian #> 4=American Indian or Alaska Native #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── RFCAT ── #>  #> 1=Normal Function (>=90 mL/min) #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> 4=Severe Impairment (15-29 mL/min) #> 5=End Stage Disease (<15 mL/min or Dialysis) #>  #> ── NCILIV ── #>  #> 0=Normal Group A #> 1=Mild Group B1 #> 2=Mild Group B2 #> 3=Moderate Group C #> 4=Severe Group D"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"extracting-from-a-dataset","dir":"Articles","previous_headings":"Constructing decode_tbls","what":"Extracting from a dataset","title":"Decode Tables","text":"method expected used data set already includes level label variables. Like RACEN RACEC : lvl_to_lbl argument maps names level variables names label variables. Sometimes, one representation variable data set. Like cov data set includes pair variables RACEN & RACEC, along original source variable RACE. Ideally, level variable numeric. data types accepted. One way review merged content map label variable original source variable derived .","code":"cov %>%   cnt(RACEN, RACEC) #> # A tibble: 3 × 4 #>   RACEN RACEC                                n n_cumulative #>   <dbl> <chr>                            <int>        <int> #> 1     1 White/Caucasian                    230          230 #> 2     2 Black/African American              23          253 #> 3     4 American Indian or Alaska Native     1          254  cov %>%   extract_decode_tbls_from_data(     lvl_to_lbl = list(RACEN = \"RACEC\")   ) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 4=American Indian or Alaska Native cov %>%   extract_decode_tbls_from_data(     lvl_to_lbl = list(       # map individual variables       SEXF = \"SEXFC\",       RACEN = \"RACEC\",       # map other lvl to lbl by removing CD at the end of variable names       ~ stringr::str_remove(.x, \"CD$\")     )   ) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 4=American Indian or Alaska Native #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── ARMCD ── #>  #> Pbo=Placebo #> Xan_Hi=Xanomeline High Dose #> Xan_Lo=Xanomeline Low Dose #>  #> ── ACTARMCD ── #>  #> Pbo=Placebo #> Xan_Hi=Xanomeline High Dose #> Xan_Lo=Xanomeline Low Dose cov %>%   extract_decode_tbls_from_data(     lvl_to_lbl = list(       RACEN = \"RACE\"     )   ) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── RACEN ── #>  #> 1=WHITE #> 2=BLACK OR AFRICAN AMERICAN #> 4=AMERICAN INDIAN OR ALASKA NATIVE cov %>%   extract_decode_tbls_from_data(     lvl_to_lbl = list(       RACE = \"RACEC\"     )   ) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── RACE ── #>  #> AMERICAN INDIAN OR ALASKA NATIVE=American Indian or Alaska Native #> BLACK OR AFRICAN AMERICAN=Black/African American #> WHITE=White/Caucasian"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"constructing-manually-from-a-data-frame","dir":"Articles","previous_headings":"Constructing decode_tbls","what":"Constructing manually from a data frame","title":"Decode Tables","text":"can done many different ways. general, use as_decode_tbls() named list data frames contain variables var, lvl, lbl. One example , decodes defined multiple variables, named list generated split().","code":"tibble::tribble(   ~var, ~lvl, ~lbl,   \"RACEN\", 1, \"White/Caucasian\",   \"RACEN\", 2, \"Black/African American\",   \"RACEN\", 3, \"Asian\",   \"RACEN\", 4, \"American Indian or Alaska Native\",      \"SEXF\",  0, \"Male\",   \"SEXF\",  1, \"Female\"   ) %>%    split(~ var) %>%    as_decode_tbls() #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 3=Asian #> 4=American Indian or Alaska Native #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"incorporating-decode_tbls-as-variables-in-data-sets","dir":"Articles","previous_headings":"","what":"Incorporating decode_tbls as variables in data sets","title":"Decode Tables","text":"demonstrate automation features utilities, consider data set contains numeric variables.","code":"pk_numeric <- pk %>%    select(where(is.numeric))"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"set_decode_factors","dir":"Articles","previous_headings":"Incorporating decode_tbls as variables in data sets","what":"set_decode_factors()","title":"Decode Tables","text":"Modify create new factor variables based decode_tbls requirements objects. order levels defined based sort order level decode definition. useful functions consider order factor levels. Since resulting variables factors, easy summarize across(). example provides summary categorical covariates ID. new_names argument works similarly lvl_to_lbl argument joining functions, mapping existing variable allowed set_decode_factors().","code":"pk_numeric %>%    set_decode_factors(requirements) %>%    cnt(RACEN, SEXF, n_distinct_vars = ID) #> ✔ Modified variable `BLQFN` as a factor of `BLQFN`. #> ✔ Modified variable `DVID` as a factor of `DVID`. #> ✔ Modified variable `EVID` as a factor of `EVID`. #> ✔ Modified variable `MDV` as a factor of `MDV`. #> ✔ Modified variable `NCILIV` as a factor of `NCILIV`. #> ✔ Modified variable `RACEN` as a factor of `RACEN`. #> ✔ Modified variable `RFCAT` as a factor of `RFCAT`. #> ✔ Modified variable `SEXF` as a factor of `SEXF`. #> # A tibble: 5 × 5 #>   RACEN                            SEXF    n_ID     n n_cumulative #>   <fct>                            <fct>  <int> <int>        <int> #> 1 White/Caucasian                  Male     104  1456         1456 #> 2 White/Caucasian                  Female   126  1764         3220 #> 3 Black/African American           Male       6    84         3304 #> 4 Black/African American           Female    17   238         3542 #> 5 American Indian or Alaska Native Male       1    14         3556 pk_numeric %>%    select(all_of(stationary_variables(., ID))) %>%    set_decode_factors(requirements) %>%    cnt(across(where(is.factor)), n_distinct_vars = ID) #> ✔ Modified variable `NCILIV` as a factor of `NCILIV`. #> ✔ Modified variable `RACEN` as a factor of `RACEN`. #> ✔ Modified variable `RFCAT` as a factor of `RFCAT`. #> ✔ Modified variable `SEXF` as a factor of `SEXF`. #> # A tibble: 22 × 7 #>    RACEN           SEXF   RFCAT                  NCILIV  n_ID     n n_cumulative #>    <fct>           <fct>  <fct>                  <fct>  <int> <int>        <int> #>  1 White/Caucasian Male   Mild Impairment (60-8… Norma…    26   364          364 #>  2 White/Caucasian Male   Mild Impairment (60-8… Mild …     3    42          406 #>  3 White/Caucasian Male   Mild Impairment (60-8… Mild …     1    14          420 #>  4 White/Caucasian Male   Mild Impairment (60-8… Moder…     1    14          434 #>  5 White/Caucasian Male   Moderate Impairment (… Norma…    65   910         1344 #>  6 White/Caucasian Male   Moderate Impairment (… Mild …     1    14         1358 #>  7 White/Caucasian Male   Moderate Impairment (… Mild …     4    56         1414 #>  8 White/Caucasian Male   NA                     Norma…     3    42         1456 #>  9 White/Caucasian Female Mild Impairment (60-8… Norma…    30   420         1876 #> 10 White/Caucasian Female Mild Impairment (60-8… Mild …     3    42         1918 #> # ℹ 12 more rows pk_numeric %>%    set_decode_factors(     decode_tbls = requirements,      new_names = list(       \"{var}FCT\",       RACEN = \"RACEN\",        SEXF = \"SEXFC\"      )   ) %>%    cnt(RACEN, SEXFC, RFCATFCT, n_distinct_vars = ID) #> ✔ Created new variable `BLQFNFCT` as a factor of `BLQFN`. #> ✔ Created new variable `DVIDFCT` as a factor of `DVID`. #> ✔ Created new variable `EVIDFCT` as a factor of `EVID`. #> ✔ Created new variable `MDVFCT` as a factor of `MDV`. #> ✔ Created new variable `NCILIVFCT` as a factor of `NCILIV`. #> ✔ Modified variable `RACEN` as a factor of `RACEN`. #> ✔ Created new variable `RFCATFCT` as a factor of `RFCAT`. #> ✔ Created new variable `SEXFC` as a factor of `SEXF`. #> # A tibble: 12 × 6 #>    RACEN                            SEXFC  RFCATFCT      n_ID     n n_cumulative #>    <fct>                            <fct>  <fct>        <int> <int>        <int> #>  1 White/Caucasian                  Male   Mild Impair…    31   434          434 #>  2 White/Caucasian                  Male   Moderate Im…    70   980         1414 #>  3 White/Caucasian                  Male   NA               3    42         1456 #>  4 White/Caucasian                  Female Mild Impair…    36   504         1960 #>  5 White/Caucasian                  Female Moderate Im…    84  1176         3136 #>  6 White/Caucasian                  Female NA               6    84         3220 #>  7 Black/African American           Male   Mild Impair…     4    56         3276 #>  8 Black/African American           Male   Moderate Im…     1    14         3290 #>  9 Black/African American           Male   NA               1    14         3304 #> 10 Black/African American           Female Mild Impair…     8   112         3416 #> 11 Black/African American           Female Moderate Im…     9   126         3542 #> 12 American Indian or Alaska Native Male   Mild Impair…     1    14         3556"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"join_decode_labels","dir":"Articles","previous_headings":"Incorporating decode_tbls as variables in data sets","what":"join_decode_labels()","title":"Decode Tables","text":"Create new label variables variables matching names data decode_tbls. default label name level name appended C. , use lvl_to_lbl provide named list can include glue specifications functions map level names label names. One unnamed element can included lvl_to_lbl provide default behavior. Variables joined already exist.","code":"pk_numeric_with_label_vars <- pk_numeric %>%    join_decode_labels(requirements) #> ✔ Joined `BLQFNC` by `BLQFN`. #> Warning: Missing values for `BLQFNC` where `BLQFN` is: NA #>  #> ── BLQFN ── #>  #> 0=No #> 1=Yes #> NA=NA #> ✔ Joined `DVIDC` by `DVID`. #>  #> ── DVID ── #>  #> 0=Dose #> 1=Xanomeline Concentration (ug/mL) #> ✔ Joined `EVIDC` by `EVID`. #>  #> ── EVID ── #>  #> 0=PK or PD measure #> 1=Dose #> ✔ Joined `MDVC` by `MDV`. #>  #> ── MDV ── #>  #> 0=PK or PD measure #> 1=Dose or Other #> ✔ Joined `NCILIVC` by `NCILIV`. #>  #> ── NCILIV ── #>  #> 0=Normal Group A #> 1=Mild Group B1 #> 2=Mild Group B2 #> 3=Moderate Group C #> ✔ Joined `RACENC` by `RACEN`. #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 4=American Indian or Alaska Native #> ✔ Joined `RFCATC` by `RFCAT`. #> Warning: Missing values for `RFCATC` where `RFCAT` is: NA #>  #> ── RFCAT ── #>  #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> NA=NA #> ✔ Joined `SEXFC` by `SEXF`. #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female pk_numeric %>%    select(ID, RACEN, SEXF) %>%    join_decode_labels(requirements, lvl_to_lbl = list(RACEN = \"RACEC\", \"{var}C\")) %>%    cnt(RACEN, RACEC, SEXF, SEXFC, n_distinct_vars = ID) #> ✔ Joined `RACEC` by `RACEN`. #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 4=American Indian or Alaska Native #> ✔ Joined `SEXFC` by `SEXF`. #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #> # A tibble: 5 × 7 #>   RACEN RACEC                             SEXF SEXFC   n_ID     n n_cumulative #>   <dbl> <chr>                            <dbl> <chr>  <int> <int>        <int> #> 1     1 White/Caucasian                      0 Male     104  1456         1456 #> 2     1 White/Caucasian                      1 Female   126  1764         3220 #> 3     2 Black/African American               0 Male       6    84         3304 #> 4     2 Black/African American               1 Female    17   238         3542 #> 5     4 American Indian or Alaska Native     0 Male       1    14         3556 pk %>%    select(ID, RACEN, RACEC, SEXF) %>%    join_decode_labels(requirements, lvl_to_lbl = list(RACEN = \"RACEC\", \"{var}C\")) %>%    cnt(RACEN, RACEC, SEXF, SEXFC, n_distinct_vars = ID) #> Warning: `RACEC` already exists in `.data`. Skipping join for `RACEN`. #> ✔ Joined `SEXFC` by `SEXF`. #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #> # A tibble: 5 × 7 #>   RACEN RACEC                             SEXF SEXFC   n_ID     n n_cumulative #>   <dbl> <chr>                            <dbl> <chr>  <int> <int>        <int> #> 1     1 White/Caucasian                      0 Male     104  1456         1456 #> 2     1 White/Caucasian                      1 Female   126  1764         3220 #> 3     2 Black/African American               0 Male       6    84         3304 #> 4     2 Black/African American               1 Female    17   238         3542 #> 5     4 American Indian or Alaska Native     0 Male       1    14         3556"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/decodes.html","id":"join_decode_levels","dir":"Articles","previous_headings":"Incorporating decode_tbls as variables in data sets","what":"join_decode_levels()","title":"Decode Tables","text":"scenarios label variable already defined data set, corresponding levels can joined join_decode_levels(). lvl_to_lbl structure identical whether joining labels levels.","code":"pk %>%    select(ID, RACEC, SEXFC) %>%    join_decode_levels(requirements, lvl_to_lbl = list(RACEN = \"RACEC\", \"{var}C\")) %>%    cnt(RACEN, RACEC, SEXF, SEXFC, n_distinct_vars = ID) #> ✔ Joined `RACEN` by `RACEC`. #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 4=American Indian or Alaska Native #> ✔ Joined `SEXF` by `SEXFC`. #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #> # A tibble: 5 × 7 #>   RACEN RACEC                             SEXF SEXFC   n_ID     n n_cumulative #>   <dbl> <chr>                            <dbl> <chr>  <int> <int>        <int> #> 1     1 White/Caucasian                      0 Male     104  1456         1456 #> 2     1 White/Caucasian                      1 Female   126  1764         3220 #> 3     2 Black/African American               0 Male       6    84         3304 #> 4     2 Black/African American               1 Female    17   238         3542 #> 5     4 American Indian or Alaska Native     0 Male       1    14         3556"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Requirements","text":"Data requirements specifications dataset. describe required variables varying details like variable label, type, description, source, formula, rounding specifications, relationships variables. Generally, requirements maintained file. functions support gathering applying information Excel files, Word (docx) tables, data.frame. purposes vignette, consider files directory include tables variables:","code":"#>            name                                           description #>   variable_name                                         Variable Name #>  variable_label                                        Variable Label #>          pk_ard Whether the variable is in the Analysis Ready Dataset #>          pk_mif       Whether the variable is in the Model Input File #>   format_decode  Pairs of (generally) numeric values and descriptions"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"identify-data-requirements-files","dir":"Articles","previous_headings":"","what":"Identify data requirements files","title":"Data Requirements","text":"versioning strategy based latest modification date file, might multiple versions data requirements file exist data assembly directory. Consider data assembly directory : Use available_requirements_table() function collect information multiple data requirements files. Supported files match pattern required sheet names positions kept. default, required sheet name \"specs\". resulting table can used identify desired version data requirements file pass read_requirements() function. Use sheet = NULL required sheet names. required include docx files searches. Use drop_qc = FALSE include versions data requirements used QC. files ignored otherwise.","code":"asmbdat_directory <- file.path(tempdir(), \"asmbdat\") asmbdat_directory #> [1] \"/tmp/RtmpAdlVtG/asmbdat\" #> /tmp/RtmpAdlVtG/asmbdat #> ├── data-requirements-2019-12-01.xlsx #> ├── data-requirements-2020-01-01.xlsx #> ├── data-requirements-2020-01-10.xlsx #> ├── data-requirements-2025-01-16.xlsx #> ├── legacy-data-requirements-2000-01-01.docx #> └── qc-data-requirements-2025-01-16.xlsx available_requirements_table(   path = asmbdat_directory,   pattern = \"req\" ) %>%    select(-c(created, modified)) %>%    print.data.frame() #>                                                        path  path_date #> 1 /tmp/RtmpAdlVtG/asmbdat/data-requirements-2020-01-01.xlsx 2020-01-01 #> 2 /tmp/RtmpAdlVtG/asmbdat/data-requirements-2020-01-10.xlsx 2020-01-10 #> 3 /tmp/RtmpAdlVtG/asmbdat/data-requirements-2025-01-16.xlsx 2025-01-16 #>         date                               sheets is_qc #> 1 2020-01-01                                specs FALSE #> 2 2020-01-10              specs, unit_conversions FALSE #> 3 2025-01-16 specs, unit_conversions, discussions FALSE available_requirements_table(   path = asmbdat_directory,   pattern = \"req\",   sheet = NULL ) %>%   select(-c(created, modified)) %>%    print.data.frame() #>                                                               path  path_date #> 1        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2019-12-01.xlsx 2019-12-01 #> 2        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2020-01-01.xlsx 2020-01-01 #> 3        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2020-01-10.xlsx 2020-01-10 #> 4        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2025-01-16.xlsx 2025-01-16 #> 5 /tmp/RtmpAdlVtG/asmbdat/legacy-data-requirements-2000-01-01.docx 2000-01-01 #>         date                               sheets is_qc #> 1 2019-12-01                              Sheet 1 FALSE #> 2 2020-01-01                                specs FALSE #> 3 2020-01-10              specs, unit_conversions FALSE #> 4 2025-01-16 specs, unit_conversions, discussions FALSE #> 5 2000-01-01                                 NULL FALSE available_requirements_table(   path = asmbdat_directory,   pattern = \"req\",   sheet = NULL,   drop_qc = FALSE ) %>%    select(-c(created, modified)) %>%    print.data.frame() #>                                                               path  path_date #> 1        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2019-12-01.xlsx 2019-12-01 #> 2        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2020-01-01.xlsx 2020-01-01 #> 3        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2020-01-10.xlsx 2020-01-10 #> 4        /tmp/RtmpAdlVtG/asmbdat/data-requirements-2025-01-16.xlsx 2025-01-16 #> 5 /tmp/RtmpAdlVtG/asmbdat/legacy-data-requirements-2000-01-01.docx 2000-01-01 #> 6     /tmp/RtmpAdlVtG/asmbdat/qc-data-requirements-2025-01-16.xlsx 2025-01-16 #>         date                                            sheets is_qc #> 1 2019-12-01                                           Sheet 1 FALSE #> 2 2020-01-01                                             specs FALSE #> 3 2020-01-10                           specs, unit_conversions FALSE #> 4 2025-01-16              specs, unit_conversions, discussions FALSE #> 5 2000-01-01                                              NULL FALSE #> 6 2025-01-16 specs, unit_conversions, discussions, qc_findings  TRUE"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"read-data-requirements","dir":"Articles","previous_headings":"","what":"Read data requirements","title":"Data Requirements","text":"path provided, read_requirements() read latest version matching data requirements files working directory. latest version selected file recent date filename. dates detected filenames, matching file recent modification time selected. Use subset argument provide subset/filter criteria: Use as_requirements() apply requirements attributes existing data frame:","code":"requirements <- read_requirements(asmbdat_directory) #> ✔ Detected requirements file: data-requirements-2025-01-16.xlsx #> ℹ Modification time: 2025-01-16 14:10:21.243692 #> ℹ Sheet name: \"specs\" #> ✔ Applied the \"labels_named_list\" attribute #> ✔ Applied the \"decode_tbls\" attribute glimpse(requirements) #> Rows: 54 #> Columns: 5 #> $ variable_name  <chr> \"ONUM\", \"NUM\", \"STUDYID\", \"USUBJID\", \"ID\", \"TSFD\", \"TSP… #> $ variable_label <chr> \"Overall Sequence Number\", \"Sequence Number\", \"Study Id… #> $ pk_ard         <chr> \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", … #> $ pk_mif         <chr> \"x\", \"x\", \"\", \"\", \"x\", \"x\", \"x\", \"\", \"\", \"x\", \"\", \"x\", … #> $ format_decode  <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"0=Dose\\n1=Xanomeli… requirements_pk_mif <- read_requirements(   asmbdat_directory,   subset = pk_mif == \"x\" ) #> ✔ Detected requirements file: data-requirements-2025-01-16.xlsx #> ℹ Modification time: 2025-01-16 14:10:21.243692 #> ℹ Sheet name: \"specs\" #> ✔ Applied requested subset: `pk_mif == \"x\"` #> ✔ Applied the \"labels_named_list\" attribute #> ✔ Applied the \"decode_tbls\" attribute glimpse(requirements_pk_mif) #> Rows: 16 #> Columns: 5 #> $ variable_name  <chr> \"ONUM\", \"NUM\", \"ID\", \"TSFD\", \"TSPD\", \"DVID\", \"EVID\", \"M… #> $ variable_label <chr> \"Overall Sequence Number\", \"Sequence Number\", \"Subject … #> $ pk_ard         <chr> \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", … #> $ pk_mif         <chr> \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", … #> $ format_decode  <chr> \"\", \"\", \"\", \"\", \"\", \"0=Dose\\n1=Xanomeline Concentration… requirements_pk_mif_with_as <- as_requirements(   as.data.frame(requirements_pk_mif) ) #> ✔ Applied the \"labels_named_list\" attribute #> ✔ Applied the \"decode_tbls\" attribute identical(requirements_pk_mif_with_as, requirements_pk_mif) #> [1] TRUE"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"attributes","dir":"Articles","previous_headings":"Read data requirements","what":"Attributes","title":"Data Requirements","text":"possible, additional attributes assigned result read_requirements() as_requirements(). Resulting requirements objects can used directly functions package apply attributes.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"decode_tbls","dir":"Articles","previous_headings":"Read data requirements > Attributes","what":"decode_tbls","title":"Data Requirements","text":"attribute set variable_name_col decode_col arguments defined variables requirements. See details using decode_tbls Decode Tables vignette.","code":"attr(requirements, \"decode_tbls\") #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── DVID ── #>  #> 0=Dose #> 1=Xanomeline Concentration (ug/mL) #>  #> ── EVID ── #>  #> 0=PK or PD measure #> 1=Dose #> 2=Other #>  #> ── MDV ── #>  #> 0=PK or PD measure #> 1=Dose or Other #>  #> ── BLQFN ── #>  #> 0=No #> 1=Yes #>  #> ── FED ── #>  #> 0=Fasted #> 1=Fed #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 3=Asian #> 4=American Indian or Alaska Native #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── RFCAT ── #>  #> 1=Normal Function (>=90 mL/min) #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> 4=Severe Impairment (15-29 mL/min) #> 5=End Stage Disease (<15 mL/min or Dialysis) #>  #> ── NCILIV ── #>  #> 0=Normal Group A #> 1=Mild Group B1 #> 2=Mild Group B2 #> 3=Moderate Group C #> 4=Severe Group D"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"join-decodes","dir":"Articles","previous_headings":"Read data requirements > Attributes > decode_tbls","what":"Join decodes","title":"Data Requirements","text":"join new variables data set based decode_tbls requirements objects, use join_decode_labels() join_decode_levels().","code":"dmcognigen_pk %>%    select(USUBJID, RACEN, SEXF) %>%    join_decode_labels(dmcognigen_pk_requirements, lvl_to_lbl = list(RACEN = \"RACEC\", \"{var}C\")) %>%    cnt(RACEN, RACEC, SEXF, SEXFC, n_distinct_vars = USUBJID) #> ✔ Joined `RACEC` by `RACEN`. #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 4=American Indian or Alaska Native #> ✔ Joined `SEXFC` by `SEXF`. #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #> # A tibble: 5 × 7 #>   RACEN RACEC                            SEXF SEXFC n_USUBJID     n n_cumulative #>   <dbl> <chr>                           <dbl> <chr>     <int> <int>        <int> #> 1     1 White/Caucasian                     0 Male        104  1456         1456 #> 2     1 White/Caucasian                     1 Fema…       126  1764         3220 #> 3     2 Black/African American              0 Male          6    84         3304 #> 4     2 Black/African American              1 Fema…        17   238         3542 #> 5     4 American Indian or Alaska Nati…     0 Male          1    14         3556"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"create-or-modify-variables-as-factors","dir":"Articles","previous_headings":"Read data requirements > Attributes > decode_tbls","what":"Create or modify variables as factors","title":"Data Requirements","text":"Use set_decode_factors() either modify variables -place create new variables.","code":"dmcognigen_cov %>%    set_decode_factors(requirements, new_names = list(RACEN = \"RACEN\", \"{var}FCT\")) %>%    cnt(RACEN, across(ends_with(\"FCT\")), n_cumulative = FALSE) #> ✔ Created new variable `NCILIVFCT` as a factor of `NCILIV`. #> ✔ Modified variable `RACEN` as a factor of `RACEN`. #> ✔ Created new variable `RFCATFCT` as a factor of `RFCAT`. #> ✔ Created new variable `SEXFFCT` as a factor of `SEXF`. #> # A tibble: 22 × 5 #>    RACEN           NCILIVFCT      RFCATFCT                         SEXFFCT     n #>    <fct>           <fct>          <fct>                            <fct>   <int> #>  1 White/Caucasian Normal Group A Mild Impairment (60-89 mL/min)   Male       26 #>  2 White/Caucasian Normal Group A Mild Impairment (60-89 mL/min)   Female     30 #>  3 White/Caucasian Normal Group A Moderate Impairment (30-59 mL/m… Male       65 #>  4 White/Caucasian Normal Group A Moderate Impairment (30-59 mL/m… Female     78 #>  5 White/Caucasian Normal Group A NA                               Male        3 #>  6 White/Caucasian Normal Group A NA                               Female      5 #>  7 White/Caucasian Mild Group B1  Mild Impairment (60-89 mL/min)   Male        3 #>  8 White/Caucasian Mild Group B1  Mild Impairment (60-89 mL/min)   Female      3 #>  9 White/Caucasian Mild Group B1  Moderate Impairment (30-59 mL/m… Male        1 #> 10 White/Caucasian Mild Group B1  Moderate Impairment (30-59 mL/m… Female      6 #> # ℹ 12 more rows"},{"path":"https://simulations-plus.github.io/dmcognigen/articles/requirements.html","id":"labels_named_list","dir":"Articles","previous_headings":"Read data requirements > Attributes","what":"labels_named_list","title":"Data Requirements","text":"attribute set variable_name_col variable_label_col arguments defined variables requirements. requirements can used directly set_labels() attribute can extracted possibly modified. Apply labels data set:","code":"attr(requirements, \"labels_named_list\") %>%    head() #> $ONUM #> [1] \"Overall Sequence Number\" #>  #> $NUM #> [1] \"Sequence Number\" #>  #> $STUDYID #> [1] \"Study Identifier\" #>  #> $USUBJID #> [1] \"Unique Subject Identifier\" #>  #> $ID #> [1] \"Subject ID\" #>  #> $TSFD #> [1] \"Time Since First Dose (h)\" dmcognigen_cov_labels_removed %>%    str() #> tibble [254 × 3] (S3: tbl_df/tbl/data.frame) #>  $ STUDYID: chr [1:254] \"CDISCPILOT01\" \"CDISCPILOT01\" \"CDISCPILOT01\" \"CDISCPILOT01\" ... #>   ..- attr(*, \"label\")= chr \"\" #>  $ USUBJID: chr [1:254] \"01-701-1015\" \"01-701-1023\" \"01-701-1028\" \"01-701-1033\" ... #>   ..- attr(*, \"label\")= chr \"\" #>  $ RACEN  : num [1:254] 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"label\")= chr \"\" #>  - attr(*, \"label\")= chr \"CDISCPILOT01 Covariates\"  # apply the labels dmcognigen_cov_labels_removed %>%    set_labels(labels = requirements) %>%    str() #> ℹ Inheriting labels from `requirements` <requirements> object. #> tibble [254 × 3] (S3: tbl_df/tbl/data.frame) #>  $ STUDYID: chr [1:254] \"CDISCPILOT01\" \"CDISCPILOT01\" \"CDISCPILOT01\" \"CDISCPILOT01\" ... #>   ..- attr(*, \"label\")= chr \"Study Identifier\" #>  $ USUBJID: chr [1:254] \"01-701-1015\" \"01-701-1023\" \"01-701-1028\" \"01-701-1033\" ... #>   ..- attr(*, \"label\")= chr \"Unique Subject Identifier\" #>  $ RACEN  : num [1:254] 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"label\")= chr \"Race\" #>  - attr(*, \"label\")= chr \"CDISCPILOT01 Covariates\""},{"path":"https://simulations-plus.github.io/dmcognigen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nash Delcamp. Author, maintainer. Louis Penrod. Author. Amin Sherzad. Author. Steve Hummel. Author. Simulations Plus. Copyright holder.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Delcamp N, Penrod L, Sherzad , Hummel S (2025). dmcognigen: Data management functions Clinical Pharmacology Pharmacometrics (CPP) business unit Simulations Plus, Inc. R package version 0.1.1.9000, https://github.com/simulations-plus/dmcognigen, https://simulations-plus.github.io/dmcognigen/.","code":"@Manual{,   title = {dmcognigen: Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc},   author = {Nash Delcamp and Louis Penrod and Amin Sherzad and Steve Hummel},   year = {2025},   note = {R package version 0.1.1.9000, https://github.com/simulations-plus/dmcognigen},   url = {https://simulations-plus.github.io/dmcognigen/}, }"},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc","text":"dmcognigen provides functions data management tasks Clinical Pharmacology Pharmacometrics (CPP) business unit Simulations Plus, Inc. Install : Load :","code":"remotes::install_github(\"simulations-plus/dmcognigen\") library(dmcognigen)"},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/index.html","id":"count-observations-and-unique-values-by-group","dir":"","previous_headings":"","what":"Count Observations and Unique Values by Group","title":"Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc","text":"function expected used frequently package cnt() function. cnt() extension dplyr::count() intended count number distinct occurrences variables within group. example, commonly cnt(.data, STUDYID, n_distinct_vars = USUBJID) count number records within STUDYID along number unique subjects (USUBJID) within STUDYID.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/index.html","id":"calculate-standard-variables","dir":"","previous_headings":"","what":"Calculate Standard Variables","title":"Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc","text":"See full details Calculations vignette. Use calculate_*() family functions apply standard equations.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/index.html","id":"read-and-leverage-data-requirements","dir":"","previous_headings":"","what":"Read and Leverage Data Requirements","title":"Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc","text":"See full details Data Requirements vignette. Check data requirement files available available_requirements_table() import data requirements read_requirements(). \"decode_tbls\" attribute can utilized within join_decode_labels() join_decode_levels(). \"labels_named_list\" attribute can utilized within set_labels().","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/index.html","id":"interact-with-decodes","dir":"","previous_headings":"","what":"Interact with Decodes","title":"Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc","text":"See full details Decode Tables vignette. Extract decodes vectors extract_decode_tbls(). Extract decodes dataset extract_decode_tbls_from_data(). Merge decodes join_decode_labels() join_decode_levels(). Create factor variables set_decode_factors().","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/index.html","id":"search-datasets","dir":"","previous_headings":"","what":"Search Datasets","title":"Data management functions for the Clinical Pharmacology and Pharmacometrics (CPP) business unit of Simulations Plus, Inc","text":"Find datasets variables exist in_which(). Search patterns variable names, variable labels, variable content across datasets environment search_environment_data() summarize results cnt_search_result().","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Aspartate Aminotransferase Category — calculate_astcat","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"Calculate Aspartate Aminotransferase Category","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"","code":"calculate_astcat(ast, astuln)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"ast Aspartate Aminotransferase (U/L). Numeric vector. astuln Reference Range Upper Limit (units observed values). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"","code":"Formula to calculate ASTCAT:   if AST [U/L] <= ULN [U/L] then ASTCAT = 0   if ULN [U/L] < AST [U/L] then ASTCAT = 1"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"Ramanathan RK, Egorin MJ, Takimoto CHM, Remick SC, Doroshow JH, LoRusso PA, et al. Phase pharmacokinetic study imatinib mesylate patients advanced malignancies varying degrees liver dysfunction: study national cancer institute organ dysfunction working group. J Clin Oncol. 2008;26:563-9. Ramalingam SS, Kummar S, Sarantopoulos J, Shibata S, LoRusso P, Yerk M, et al. Phase study vorinostat patients advanced solid tumors hepatic dysfunction: National Cancer Institute Organ Dysfunction Working Group study. J Clin Oncol. 2010;28(29):4507-12.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_astcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Aspartate Aminotransferase Category — calculate_astcat","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  dmcognigen_cov %>%   mutate(ASTCAT = calculate_astcat(ast = AST, astuln = ASTULN)) #> Formula to calculate ASTCAT:  #>   if AST [U/L] <= ULN [U/L] then ASTCAT = 0 #>   if ULN [U/L] < AST [U/L] then ASTCAT = 1 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(ASTCAT = calculate_astcat()) #> AST variable found and used for the ast argument. #> ASTULN variable found and used for the astuln argument. #> Formula to calculate ASTCAT:  #>   if AST [U/L] <= ULN [U/L] then ASTCAT = 0 #>   if ULN [U/L] < AST [U/L] then ASTCAT = 1 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Body Mass Index — calculate_bmi","title":"Calculate Body Mass Index — calculate_bmi","text":"Calculate Body Mass Index (BMI). BMI measure body fat based height weight","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Body Mass Index — calculate_bmi","text":"","code":"calculate_bmi(htcm, wtkg)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Body Mass Index — calculate_bmi","text":"htcm Height (cm). Numeric vector. wtkg Weight (kg). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Body Mass Index — calculate_bmi","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Body Mass Index — calculate_bmi","text":"","code":"Formula to calculate BMI:   BMI [kg/m^2] = WTKG [kg] ÷ (HTCM [cm] ÷ 100) ^ 2"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Body Mass Index — calculate_bmi","text":"CDC","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Body Mass Index — calculate_bmi","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(BMI = calculate_bmi(htcm = HTCM, wtkg = WTKG)) #> Formula to calculate BMI:  #>   BMI [kg/m^2] = WTKG [kg] ÷ (HTCM [cm] ÷ 100) ^ 2 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(BMI = calculate_bmi()) #> HTCM variable found and used for the htcm argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate BMI:  #>   BMI [kg/m^2] = WTKG [kg] ÷ (HTCM [cm] ÷ 100) ^ 2 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Body Surface Area — calculate_bsa","title":"Calculate Body Surface Area — calculate_bsa","text":"Calculate Body Surface Area (BSA). Body Surface Area measure body fat based height weight","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Body Surface Area — calculate_bsa","text":"","code":"calculate_bsa(htcm, wtkg)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Body Surface Area — calculate_bsa","text":"htcm Height (cm). Numeric vector. wtkg Weight (kg). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Body Surface Area — calculate_bsa","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Body Surface Area — calculate_bsa","text":"","code":"Formula to calculate BSA:   BSA [m^2] = ((HTCM [cm]) ^ 0.42246 * (WTKG [kg]) ^ 0.51456) * 0.0235"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Body Surface Area — calculate_bsa","text":"Gehan EA, George SL. Estimation human body surface area height weight. Cancer Chemother Rep. 1970 Aug;54(4):225-35. PMID: 5527019","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_bsa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Body Surface Area — calculate_bsa","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(BSA = calculate_bsa(htcm = HTCM, wtkg = WTKG)) #> Formula to calculate BSA:  #>   BSA [m^2] = ((HTCM [cm]) ^ 0.42246 * (WTKG [kg]) ^ 0.51456) * 0.0235 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(BSA = calculate_bsa()) #> HTCM variable found and used for the htcm argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate BSA:  #>   BSA [m^2] = ((HTCM [cm]) ^ 0.42246 * (WTKG [kg]) ^ 0.51456) * 0.0235 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Creatinine Clearance — calculate_crcl","title":"Calculate Creatinine Clearance — calculate_crcl","text":"Calculate Creatinine Clearance (CrCl), measure renal function based age, weight, gender, serum creatinine. Cockcroft Gault Formula.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Creatinine Clearance — calculate_crcl","text":"","code":"calculate_crcl(age, scr, sexf, wtkg)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Creatinine Clearance — calculate_crcl","text":"age Age (y). Numeric vector. scr Serum Creatinine (mg/dL). Numeric vector. sexf Sex. Numeric vector including values 0 /1. 0=Male; 1=Female. wtkg Weight (kg). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Creatinine Clearance — calculate_crcl","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Creatinine Clearance — calculate_crcl","text":"","code":"Formula to calculate CRCL:   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Creatinine Clearance — calculate_crcl","text":"Cockcroft DW, Gault MH. Prediction creatinine clearance serum creatinine. Nephron. 1976;16:31-41.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Creatinine Clearance — calculate_crcl","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(CRCL = calculate_crcl(     age = AGE,      scr = SCR,      sexf = SEXF,     wtkg = WTKG    )) #> Formula to calculate CRCL:  #>   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) #>   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(CRCL = calculate_crcl()) #> AGE variable found and used for the age argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate CRCL:  #>   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) #>   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Set a cap at some value, like 160 dmcognigen_cov %>%    mutate(CRCL = pmin(calculate_crcl(), 160)) #> AGE variable found and used for the age argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate CRCL:  #>   Males: CRCL [mL/min] = ((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL]) #>   Females: CRCL [mL/min] = (((140 - AGE [y]) × WTKG [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"Calculate Creatinine Clearance (CrCl) using Peck Formula, measure renal function based age, ideal weight, gender, serum creatinine","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"","code":"calculate_crcl_peck(age, crcl, ibw, scr, sexf, wtkg)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"age Age (y). Numeric vector. crcl Creatinine Clearance (mL/min) ibw Ideal Body Weight (kg). Numeric vector. scr Serum Creatinine (mg/dL). Numeric vector. sexf Sex. Numeric vector including values 0 /1. 0=Male; 1=Female. wtkg Weight (kg). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"","code":"Formula to calculate CRCL_PECK:   If WTKG [kg] < 120% of IBW [kg], CRCL [mL/min] = CRCL [mL/min] (Cockroft & Gault)   If WTKG [kg] >= 120% of IBW [kg]:     Males: CRCL [mL/min] = ((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])     Females: CRCL [mL/min] = (((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])) × 0.85"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"Peck CC, Conner DP, Murphy MG. Simple Techniques Individualizing Drug Therapy. Vancouver, WA. Applied Therapeutics, Inc. 1989.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_crcl_peck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Creatinine Clearance using the Peck Formula — calculate_crcl_peck","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(CRCLP = calculate_crcl_peck(     age = AGE,      crcl = CRCL,      ibw = IBW,      scr = SCR,      sexf = SEXF,     wtkg = WTKG   )) #> Formula to calculate CRCL_PECK:  #>   If WTKG [kg] < 120% of IBW [kg], CRCL [mL/min] = CRCL [mL/min] (Cockroft & Gault) #>   If WTKG [kg] >= 120% of IBW [kg]: #>     Males: CRCL [mL/min] = ((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL]) #>     Females: CRCL [mL/min] = (((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(CRCLP = calculate_crcl_peck()) #> AGE variable found and used for the age argument. #> CRCL variable found and used for the crcl argument. #> IBW variable found and used for the ibw argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate CRCL_PECK:  #>   If WTKG [kg] < 120% of IBW [kg], CRCL [mL/min] = CRCL [mL/min] (Cockroft & Gault) #>   If WTKG [kg] >= 120% of IBW [kg]: #>     Males: CRCL [mL/min] = ((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL]) #>     Females: CRCL [mL/min] = (((140 - AGE [y]) × IBW [kg]) ÷ (72 × SCR [mg/dL])) × 0.85 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"Calculate Estimated Glomerular Filtration Rate (eGFR) adults","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"","code":"calculate_egfr(age, racen, scr, sexf)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"age Age (y). Numeric vector. racen Race. Numeric vector value 2 expected correspond Black/African American. scr Serum Creatinine (mg/dL). Numeric vector. sexf Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"","code":"Formula to calculate EGFR:   EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"Guidance Industry: Pharmacokinetics Patients Impaired Renal Function — Study Design, Data Analysis, Impact Dosing Labeling","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Estimated Glomerular Filtration Rate (eGFR) — calculate_egfr","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(EGFR = calculate_egfr(     age = AGE,      racen = RACEN,     scr = SCR,      sexf = SEXF   )) #> Formula to calculate EGFR:  #>   EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(EGFR = calculate_egfr()) #> AGE variable found and used for the age argument. #> RACEN variable found and used for the racen argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> Formula to calculate EGFR:  #>   EGFR [mL/min/1.73m^2] = 175 × (SCR [mg/dL] ^ -1.154) × (AGE [y] ^ -0.203) × (0.742 if female) × (1.212 if African American) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"Calculate Estimated Glomerular Filtration Rate (eGFR) Pedatrics using Schwartz formula","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"","code":"calculate_egfr_child(age, htcm, scr, sexf)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"age Age (y). Numeric vector. htcm Height (cm). Numeric vector. scr Serum Creatinine (mg/dL). Numeric vector. sexf Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"","code":"Formula to calculate EGFR_CHILD:   Children (AGE [y] <= 16), where:   EGFR = (k * HTCM [cm]) / SCR [mg/dL]   k = 0.45 for AGE [y] <= 1 (full term)   k = 0.55 for girls 1 < AGE [y] <= 16   k = 0.55 for boys 1 < AGE [y] < 13   k = 0.70 for boys 13 <= AGE [y] <= 16"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"Schwartz GJ, Furth SL. Glomerular filtration rate measurement estimation chronic kidney disease. Pediatr Nephrol. 2007;22(11):1839-48.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_egfr_child.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Estimated Glomerular Filtration Rate for Children using the Schwartz Formula — calculate_egfr_child","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(EGFRSCHW = calculate_egfr_child(     age = AGE,      htcm = HTCM,      scr = SCR,      sexf = SEXF   )) #> Formula to calculate EGFR_CHILD:  #>   Children (AGE [y] <= 16), where: #>   EGFR = (k * HTCM [cm]) / SCR [mg/dL] #>   k = 0.45 for AGE [y] <= 1 (full term) #>   k = 0.55 for girls 1 < AGE [y] <= 16 #>   k = 0.55 for boys 1 < AGE [y] < 13 #>   k = 0.70 for boys 13 <= AGE [y] <= 16 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `EGFRSCHW = calculate_egfr_child(age = AGE, htcm = HTCM, scr = #>   SCR, sexf = SEXF)`. #> Caused by warning: #> ! Cases where AGE > 16 were detected. This formula is intended for children. #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(EGFRSCHW = calculate_egfr_child()) #> AGE variable found and used for the age argument. #> HTCM variable found and used for the htcm argument. #> SCR variable found and used for the scr argument. #> SEXF variable found and used for the sexf argument. #> Formula to calculate EGFR_CHILD:  #>   Children (AGE [y] <= 16), where: #>   EGFR = (k * HTCM [cm]) / SCR [mg/dL] #>   k = 0.45 for AGE [y] <= 1 (full term) #>   k = 0.55 for girls 1 < AGE [y] <= 16 #>   k = 0.55 for boys 1 < AGE [y] < 13 #>   k = 0.70 for boys 13 <= AGE [y] <= 16 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `EGFRSCHW = calculate_egfr_child()`. #> Caused by warning: #> ! Cases where AGE > 16 were detected. This formula is intended for children. #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Ideal Body Weight — calculate_ibw","title":"Calculate Ideal Body Weight — calculate_ibw","text":"Calculate Ideal Body Weight (IBW), measure potential body fat based height","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Ideal Body Weight — calculate_ibw","text":"","code":"calculate_ibw(htcm, sexf)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Ideal Body Weight — calculate_ibw","text":"htcm Height (cm). Numeric vector. sexf Sex. Numeric vector including values 0 /1. 0=Male; 1=Female.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Ideal Body Weight — calculate_ibw","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Ideal Body Weight — calculate_ibw","text":"","code":"Formula to calculate IBW:   Males: IBW [kg] = 51.65 [kg] + 1.85 [kg] × ((HTCM [cm] ÷ 2.54) - 60)   Females: IBW [kg] = 48.67 [kg] + 1.65 [kg] × ((HTCM [cm] ÷ 2.54) - 60)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Ideal Body Weight — calculate_ibw","text":"Robinson JD, Lupkiewicz SM, Palenik L, Lopez LM, Ariet M. Determination ideal body weight drug dosage calculations. AmJHosp Pharm.  1983;40:1016-1019","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Ideal Body Weight — calculate_ibw","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(IBW = calculate_ibw(htcm = HTCM, sexf = SEXF)) #> Formula to calculate IBW:  #>   Males: IBW [kg] = 51.65 [kg] + 1.85 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #>   Females: IBW [kg] = 48.67 [kg] + 1.65 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(IBW = calculate_ibw()) #> HTCM variable found and used for the htcm argument. #> SEXF variable found and used for the sexf argument. #> Formula to calculate IBW:  #>   Males: IBW [kg] = 51.65 [kg] + 1.85 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #>   Females: IBW [kg] = 48.67 [kg] + 1.65 [kg] × ((HTCM [cm] ÷ 2.54) - 60) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Ideal Body Weight for Children — calculate_ibw_child","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"Calculate Ideal Body Weight (children), measure potential body fat based height","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"","code":"calculate_ibw_child(age, htcm)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"age Age (y). Numeric vector. htcm Height (cm). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"","code":"Formula to calculate IBW_CHILD:   IBW [kg] = [(HTCM [cm]) ^ 2 × 1.65] ÷ 1000"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"Traub SL, Johnson CE. Comparison methods estimating creatinine clearance children. J Hosp Pharm. 1980 Feb;37(2):195-201. PMID: 7361791.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_ibw_child.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Ideal Body Weight for Children — calculate_ibw_child","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(IBWCHILD = calculate_ibw_child(age = AGE, htcm = HTCM)) #> Formula to calculate IBW_CHILD:  #>   IBW [kg] = [(HTCM [cm]) ^ 2 × 1.65] ÷ 1000 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `IBWCHILD = calculate_ibw_child(age = AGE, htcm = HTCM)`. #> Caused by warning: #> ! Cases where AGE > 18 were detected. This formula is intended for children. #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(IBWCHILD = calculate_ibw_child()) #> AGE variable found and used for the age argument. #> HTCM variable found and used for the htcm argument. #> Formula to calculate IBW_CHILD:  #>   IBW [kg] = [(HTCM [cm]) ^ 2 × 1.65] ÷ 1000 #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `IBWCHILD = calculate_ibw_child()`. #> Caused by warning: #> ! Cases where AGE > 18 were detected. This formula is intended for children. #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lean Body Mass — calculate_lbm","title":"Calculate Lean Body Mass — calculate_lbm","text":"Calculate Lean Body Mass (LBM), estimation much someone weighs without body fat; much persons bones, organs muscles weigh","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lean Body Mass — calculate_lbm","text":"","code":"calculate_lbm(htcm, sexf, wtkg)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lean Body Mass — calculate_lbm","text":"htcm Height (cm). Numeric vector. sexf Sex. Numeric vector including values 0 /1. 0=Male; 1=Female. wtkg Weight (kg). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lean Body Mass — calculate_lbm","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lean Body Mass — calculate_lbm","text":"","code":"Formula to calculate LBM:   Males: LBM [kg] = (1.10 × WTKG [kg]) - 128 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2)   Females: LBM [kg] = (1.07 × WTKG [kg]) - 148 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Lean Body Mass — calculate_lbm","text":"Hallynck TH, Soep HH, Thomis JA, et al. clearance normalised body surface lean body mass? Br J Clin Pharmacol. 1981;11:523-526 James WPT. Research obesity. London. Majesty's Stationery Office. 1976","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_lbm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Lean Body Mass — calculate_lbm","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(LBM = calculate_lbm(     htcm = HTCM,     sexf = SEXF,      wtkg = WTKG    )) #> Formula to calculate LBM:  #>   Males: LBM [kg] = (1.10 × WTKG [kg]) - 128 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #>   Females: LBM [kg] = (1.07 × WTKG [kg]) - 148 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(LBM = calculate_lbm()) #> HTCM variable found and used for the htcm argument. #> SEXF variable found and used for the sexf argument. #> WTKG variable found and used for the wtkg argument. #> Formula to calculate LBM:  #>   Males: LBM [kg] = (1.10 × WTKG [kg]) - 128 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #>   Females: LBM [kg] = (1.07 × WTKG [kg]) - 148 × ((WTKG [kg]) ^ 2 ÷ (HTCM [cm]) ^ 2) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate NCI Liver Function Group — calculate_nciliv","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"Calculate NCI Liver Function Group (NCILIV)","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"","code":"calculate_nciliv(astcat, tbilcat)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"astcat Aspartate Aminotransferase Category. Numeric vector. tbilcat Total Bilirubin Category. Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"","code":"Formula to calculate NCILIV:   if TBILCAT = 0 and ASTCAT = 0 then NCILIV = 0   if TBILCAT = 0 and ASTCAT = 1 then NCILIV = 1   if TBILCAT = 1 then NCILIV = 2   if TBILCAT = 2 then NCILIV = 3   if TBILCAT = 3 then NCILIV = 4"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"Ramanathan RK, Egorin MJ, Takimoto CHM, Remick SC, Doroshow JH, LoRusso PA, et al. Phase pharmacokinetic study imatinib mesylate patients advanced malignancies varying degrees liver dysfunction: study national cancer institute organ dysfunction working group. J Clin Oncol. 2008;26:563-9. Ramalingam SS, Kummar S, Sarantopoulos J, Shibata S, LoRusso P, Yerk M, et al. Phase study vorinostat patients advanced solid tumors hepatic dysfunction: National Cancer Institute Organ Dysfunction Working Group study. J Clin Oncol. 2010;28(29):4507-12.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_nciliv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate NCI Liver Function Group — calculate_nciliv","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(NCILIV = calculate_nciliv(astcat = ASTCAT, tbilcat = TBILCAT)) #> Formula to calculate NCILIV:  #>   if TBILCAT = 0 and ASTCAT = 0 then NCILIV = 0 #>   if TBILCAT = 0 and ASTCAT = 1 then NCILIV = 1 #>   if TBILCAT = 1 then NCILIV = 2 #>   if TBILCAT = 2 then NCILIV = 3 #>   if TBILCAT = 3 then NCILIV = 4 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(NCILIV = calculate_nciliv()) #> ASTCAT variable found and used for the astcat argument. #> TBILCAT variable found and used for the tbilcat argument. #> Formula to calculate NCILIV:  #>   if TBILCAT = 0 and ASTCAT = 0 then NCILIV = 0 #>   if TBILCAT = 0 and ASTCAT = 1 then NCILIV = 1 #>   if TBILCAT = 1 then NCILIV = 2 #>   if TBILCAT = 2 then NCILIV = 3 #>   if TBILCAT = 3 then NCILIV = 4 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Renal Function Category — calculate_rfcat","title":"Calculate Renal Function Category — calculate_rfcat","text":"Calculate Renal Function Category (RFCAT)","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Renal Function Category — calculate_rfcat","text":"","code":"calculate_rfcat(egfr)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Renal Function Category — calculate_rfcat","text":"egfr Estimated Glomerular Filtration Rate (mL/min/1.73m^2). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Renal Function Category — calculate_rfcat","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Renal Function Category — calculate_rfcat","text":"","code":"Formula to calculate RFCAT:   1 = Normal Function (>= 90 mL/min)   2 = Mild Impairment (60-89 mL/min)   3 = Moderate Impairment (30-59 mL/min)   4 = Severe Impairment (15-29 mL/min)   5 = End Stage Disease (< 15 mL/min or Dialysis)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Renal Function Category — calculate_rfcat","text":"Guidance Industry: Pharmacokinetics Patients Impaired Renal Function — Study Design, Data Analysis, Impact Dosing Labeling","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_rfcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Renal Function Category — calculate_rfcat","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(RFCAT = calculate_rfcat(EGFR)) #> Formula to calculate RFCAT:  #>   1 = Normal Function (>= 90 mL/min) #>   2 = Mild Impairment (60-89 mL/min) #>   3 = Moderate Impairment (30-59 mL/min) #>   4 = Severe Impairment (15-29 mL/min) #>   5 = End Stage Disease (< 15 mL/min or Dialysis) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(RFCAT = calculate_rfcat()) #> EGFR variable found and used for the egfr argument. #> Formula to calculate RFCAT:  #>   1 = Normal Function (>= 90 mL/min) #>   2 = Mild Impairment (60-89 mL/min) #>   3 = Moderate Impairment (30-59 mL/min) #>   4 = Severe Impairment (15-29 mL/min) #>   5 = End Stage Disease (< 15 mL/min or Dialysis) #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Total Bilirubin Category — calculate_tbilcat","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"Calculate Total Bilirubin Category","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"","code":"calculate_tbilcat(tbil, tbiluln)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"tbil Total Bilirubin (mg/dL). Numeric vector. tbiluln Reference Range Upper Limit (units observed values). Numeric vector.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"function returns numeric vector length inputs","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"","code":"Formula to calculate TBILCAT:   if TBIL [mg/dL] <= ULN [mg/dL] then TBILCAT = 0   if ULN [mg/dL] < TBIL [mg/dL] <= 1.5 × ULN [mg/dL] then TBILCAT = 1   if 1.5 × ULN [mg/dL] < TBIL [mg/dL] <= 3 × ULN [mg/dL] then TBILCAT = 2   if TBIL [mg/dL] > 3 × ULN [mg/dL] then TBILCAT = 3"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"Ramanathan RK, Egorin MJ, Takimoto CHM, Remick SC, Doroshow JH, LoRusso PA, et al. Phase pharmacokinetic study imatinib mesylate patients advanced malignancies varying degrees liver dysfunction: study national cancer institute organ dysfunction working group. J Clin Oncol. 2008;26:563-9. Ramalingam SS, Kummar S, Sarantopoulos J, Shibata S, LoRusso P, Yerk M, et al. Phase study vorinostat patients advanced solid tumors hepatic dysfunction: National Cancer Institute Organ Dysfunction Working Group study. J Clin Oncol. 2010;28(29):4507-12.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/calculate_tbilcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Total Bilirubin Category — calculate_tbilcat","text":"","code":"library(dplyr)  dmcognigen_cov %>%    mutate(TBILCAT = calculate_tbilcat(tbil = TBIL, tbiluln = TBILULN)) #> Formula to calculate TBILCAT:  #>   if TBIL [mg/dL] <= ULN [mg/dL] then TBILCAT = 0 #>   if ULN [mg/dL] < TBIL [mg/dL] <= 1.5 × ULN [mg/dL] then TBILCAT = 1 #>   if 1.5 × ULN [mg/dL] < TBIL [mg/dL] <= 3 × ULN [mg/dL] then TBILCAT = 2 #>   if TBIL [mg/dL] > 3 × ULN [mg/dL] then TBILCAT = 3 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …  # Below will also work if the dataset contains expected variables dmcognigen_cov %>%    mutate(TBILCAT = calculate_tbilcat()) #> TBIL variable found and used for the tbil argument. #> TBILULN variable found and used for the tbiluln argument. #> Formula to calculate TBILCAT:  #>   if TBIL [mg/dL] <= ULN [mg/dL] then TBILCAT = 0 #>   if ULN [mg/dL] < TBIL [mg/dL] <= 1.5 × ULN [mg/dL] then TBILCAT = 1 #>   if 1.5 × ULN [mg/dL] < TBIL [mg/dL] <= 3 × ULN [mg/dL] then TBILCAT = 2 #>   if TBIL [mg/dL] > 3 × ULN [mg/dL] then TBILCAT = 3 #> # A tibble: 254 × 53 #>    DOMAIN STUDYID USUBJID    ID RACEN RACEC  SEXF SEXFC  HTCM  WTKG   AST ASTULN #>    <chr>  <chr>   <chr>   <dbl> <dbl> <chr> <dbl> <chr> <dbl> <dbl> <dbl>  <dbl> #>  1 DM     CDISCP… 01-701… 10101     1 Whit…     1 Fema…  147.  54.4    40     34 #>  2 DM     CDISCP… 01-701… 10102     1 Whit…     0 Male   163.  80.3    21     36 #>  3 DM     CDISCP… 01-701… 10103     1 Whit…     0 Male   178.  99.3    24     36 #>  4 DM     CDISCP… 01-701… 10104     1 Whit…     0 Male   175.  88.4    20     36 #>  5 DM     CDISCP… 01-701… 10105     1 Whit…     1 Fema…  155.  62.6    23     34 #>  6 DM     CDISCP… 01-701… 10106     1 Whit…     1 Fema…  149.  67.1    25     34 #>  7 DM     CDISCP… 01-701… 10108     1 Whit…     0 Male   169.  78.0    19     36 #>  8 DM     CDISCP… 01-701… 10109     1 Whit…     1 Fema…  158.  59.9    28     34 #>  9 DM     CDISCP… 01-701… 10110     1 Whit…     0 Male   182.  78.9    26     36 #> 10 DM     CDISCP… 01-701… 10111     1 Whit…     0 Male   180.  71.2    15     36 #> # ℹ 244 more rows #> # ℹ 41 more variables: SCR <dbl>, SCRULN <dbl>, TBIL <dbl>, TBILULN <dbl>, #> #   ASTCAT <dbl>, BMI <dbl>, BSA <dbl>, IBW <dbl>, CRCL <dbl>, CRCLP <dbl>, #> #   EGFR <dbl>, EGFRSCHW <dbl>, IBWCHILD <dbl>, LBM <dbl>, TBILCAT <dbl>, #> #   RFCAT <dbl>, RFCATC <chr>, NCILIV <dbl>, NCILIVC <chr>, SUBJID <chr>, #> #   RFSTDTC <chr>, RFENDTC <chr>, RFXSTDTC <chr>, RFXENDTC <chr>, #> #   RFICDTC <chr>, RFPENDTC <chr>, DTHDTC <chr>, DTHFL <chr>, SITEID <chr>, …"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt.html","id":null,"dir":"Reference","previous_headings":"","what":"Count observations and unique values by group — cnt","title":"Count observations and unique values by group — cnt","text":"function extension dplyr::count. Counts produced unique combinations grouping variables; optionally includes proportions, percentages, cumulative counts. n_distinct_vars provided, counts unique values produced .","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count observations and unique values by group — cnt","text":"","code":"cnt(   .data,   ...,   n_distinct_vars = NULL,   n_distinct_combined = TRUE,   n_cumulative = TRUE,   prop = FALSE,   pct = FALSE )"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count observations and unique values by group — cnt","text":".data data frame. ... variables group . n_distinct_vars variables count unique values . n_distinct_combined logical indicating whether count unique values combinations n_distinct_vars. n_cumulative logical indicating whether include cumulative sum variable named \"n_cumulative\". prop logical indicating whether include proportion variable named \"prop\". pct logical indicating whether include percentage variable named \"pct\".","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count observations and unique values by group — cnt","text":"data frame","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count observations and unique values by group — cnt","text":"","code":"# count unique values of `am` along with the number of distinct values of # `carb`, `cyl`, and their combination. mtcars %>%    cnt(am, n_distinct_vars = c(carb, cyl)) #> # A tibble: 2 × 6 #>      am n_carb n_cyl n_carb_cyl     n n_cumulative #>   <dbl>  <int> <int>      <int> <int>        <int> #> 1     0      4     3          7    19           19 #> 2     1      5     3          6    13           32"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt_search_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Count search results — cnt_search_result","title":"Count search results — cnt_search_result","text":"patterns matched variable names labels, subset performed. patterns matched variable content, data.frames subset rows variable matches pattern.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt_search_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count search results — cnt_search_result","text":"","code":"cnt_search_result(   search_result,   n_distinct_vars = NULL,   n_distinct_combined = TRUE,   df_names = NULL,   ignore_df_names = NULL,   extra_vars = NULL,   ignore_vars = NULL )"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt_search_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count search results — cnt_search_result","text":"search_result search_result object obtained search_environment_data. n_distinct_vars variables count unique values . n_distinct_combined logical indicating whether count unique values combinations n_distinct_vars. df_names, ignore_df_names optional character vectors data.frame names subset /exclude. extra_vars, ignore_vars optional character vectors variables include/exclude cnt results.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt_search_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count search results — cnt_search_result","text":"named list cnt results.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/cnt_search_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count search results — cnt_search_result","text":"","code":"data(dmcognigen_cov) study_search <- search_environment_data(   stringr::regex(\"study\", ignore_case = TRUE) ) cnt_search_result(   study_search,    n_distinct_vars = c(\"USUBJID\", \"SUBJID\"),    extra_vars = \"ACTARM\" ) #> $dmcognigen_cov #> # A tibble: 254 × 10 #>    STUDYID      RFXSTDTC   RFXENDTC   SITEID  DMDY ACTARM     n_USUBJID n_SUBJID #>    <chr>        <chr>      <chr>      <chr>  <dbl> <chr>          <int>    <int> #>  1 CDISCPILOT01 2012-07-09 2013-01-20 716       -3 Placebo            1        1 #>  2 CDISCPILOT01 2012-07-20 2013-01-11 703      -10 Xanomelin…         1        1 #>  3 CDISCPILOT01 2012-07-22 2013-01-20 701      -14 Xanomelin…         1        1 #>  4 CDISCPILOT01 2012-07-29 2013-02-10 711       -9 Placebo            1        1 #>  5 CDISCPILOT01 2012-07-31 2012-08-28 709      -10 Xanomelin…         1        1 #>  6 CDISCPILOT01 2012-08-05 2012-09-01 701      -14 Placebo            1        1 #>  7 CDISCPILOT01 2012-08-30 2012-11-04 704       -7 Placebo            1        1 #>  8 CDISCPILOT01 2012-09-02 2012-12-04 703      -11 Xanomelin…         1        1 #>  9 CDISCPILOT01 2012-09-07 2012-09-16 701      -13 Xanomelin…         1        1 #> 10 CDISCPILOT01 2012-09-07 2013-02-01 705       -5 Xanomelin…         1        1 #> # ℹ 244 more rows #> # ℹ 2 more variables: n_USUBJID_SUBJID <int>, n <int> #>"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/decode_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Build decode tables — decode_tbls","title":"Build decode tables — decode_tbls","text":"Objects class decode_tbl include pairs   lvl lbl single var. generated based   variable definitions values within dataset. Objects decode_tbls lists decode_tbl objects.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/decode_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build decode tables — decode_tbls","text":"","code":"as_decode_tbl(x = tibble::tibble())  as_decode_tbls(x = list())"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/decode_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build decode tables — decode_tbls","text":"x tibble data frame as_decode_tbl(). list as_decode_tbls().","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/decode_tbls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build decode tables — decode_tbls","text":"decode_tbl decode_tbls object.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/describe_param.html","id":null,"dir":"Reference","previous_headings":"","what":"pull details from params table — describe_param","title":"pull details from params table — describe_param","text":"function mostly internal, used documentation therefore exported.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/describe_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pull details from params table — describe_param","text":"","code":"describe_param(.param)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/describe_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pull details from params table — describe_param","text":".param name parameter describe","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"PK Concentrations Dataset — dmcognigen_conc","title":"PK Concentrations Dataset — dmcognigen_conc","text":"dataset generated pharmaversesdtm example datasets, updated SDTM datasets use data CDISC pilot project.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PK Concentrations Dataset — dmcognigen_conc","text":"","code":"dmcognigen_conc"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_conc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PK Concentrations Dataset — dmcognigen_conc","text":"object class tbl_df (inherits tbl, data.frame) 3556 rows 30 columns.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate Dataset — dmcognigen_cov","title":"Covariate Dataset — dmcognigen_cov","text":"dataset generated pharmaversesdtm example datasets, updated SDTM datasets use data CDISC pilot project.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate Dataset — dmcognigen_cov","text":"","code":"dmcognigen_cov"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_cov.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate Dataset — dmcognigen_cov","text":"object class tbl_df (inherits tbl, data.frame) 254 rows 53 columns.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_dose.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose Dataset — dmcognigen_dose","title":"Dose Dataset — dmcognigen_dose","text":"dataset generated pharmaversesdtm example datasets, updated SDTM datasets use data CDISC pilot project.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_dose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose Dataset — dmcognigen_dose","text":"","code":"dmcognigen_dose"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_dose.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dose Dataset — dmcognigen_dose","text":"object class tbl_df (inherits tbl, data.frame) 591 rows 29 columns.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk.html","id":null,"dir":"Reference","previous_headings":"","what":"PK Dataset — dmcognigen_pk","title":"PK Dataset — dmcognigen_pk","text":"dataset generated pharmaversesdtm example datasets, updated SDTM datasets use data CDISC pilot project.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PK Dataset — dmcognigen_pk","text":"","code":"dmcognigen_pk"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PK Dataset — dmcognigen_pk","text":"object class tbl_df (inherits tbl, data.frame) 3556 rows 105 columns.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk_requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Example PK Data Requirements — dmcognigen_pk_requirements","title":"Example PK Data Requirements — dmcognigen_pk_requirements","text":"Data Requirements designed based pharmaversesdtm example datasets, updated SDTM datasets use data CDISC pilot project. structure attributes results read_requirements as_requirements.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk_requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example PK Data Requirements — dmcognigen_pk_requirements","text":"","code":"dmcognigen_pk_requirements"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk_requirements.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example PK Data Requirements — dmcognigen_pk_requirements","text":"object class requirements (inherits tbl_df, tbl, data.frame) 54 rows 5 columns.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/dmcognigen_pk_requirements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example PK Data Requirements — dmcognigen_pk_requirements","text":"","code":"head(dmcognigen_pk_requirements) #> # A tibble: 6 × 5 #>   variable_name variable_label            pk_ard pk_mif format_decode #>   <chr>         <chr>                     <chr>  <chr>  <chr>         #> 1 ONUM          Overall Sequence Number   x      \"x\"    \"\"            #> 2 NUM           Sequence Number           x      \"x\"    \"\"            #> 3 STUDYID       Study Identifier          x      \"\"     \"\"            #> 4 USUBJID       Unique Subject Identifier x      \"\"     \"\"            #> 5 ID            Subject ID                x      \"x\"    \"\"            #> 6 TSFD          Time Since First Dose (h) x      \"x\"    \"\"             as_decode_tbls(dmcognigen_pk_requirements) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── DVID ── #>  #> 0=Dose #> 1=Xanomeline Concentration (ug/mL) #>  #> ── EVID ── #>  #> 0=PK or PD measure #> 1=Dose #> 2=Other #>  #> ── MDV ── #>  #> 0=PK or PD measure #> 1=Dose or Other #>  #> ── BLQFN ── #>  #> 0=No #> 1=Yes #>  #> ── FED ── #>  #> 0=Fasted #> 1=Fed #>  #> ── RACEN ── #>  #> 1=White/Caucasian #> 2=Black/African American #> 3=Asian #> 4=American Indian or Alaska Native #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── RFCAT ── #>  #> 1=Normal Function (>=90 mL/min) #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> 4=Severe Impairment (15-29 mL/min) #> 5=End Stage Disease (<15 mL/min or Dialysis) #>  #> ── NCILIV ── #>  #> 0=Normal Group A #> 1=Mild Group B1 #> 2=Mild Group B2 #> 3=Moderate Group C #> 4=Severe Group D"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract decode tables — extract_decode_tbls","title":"Extract decode tables — extract_decode_tbls","text":"family functions can used extract   decode_tbls vectors variable names decodes.   Generally, users expected use extract_decode_tbls. extract_decode_tbl Generates decode_tbl one   variable name set decodes. extract_decode_tbls Generates decode_tbls list given   vectors variable names decodes. Results identified decodes   dropped.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract decode tables — extract_decode_tbls","text":"","code":"extract_decode_tbl(variable_name, decode)  extract_decode_tbls(variable_name, decode)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract decode tables — extract_decode_tbls","text":"variable_name character vector variable names. decode character vector. Items expected separated new lines. Name-value pairs separated single equal sign.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract decode tables — extract_decode_tbls","text":"","code":"possible_decodes <- tibble::tribble(   ~var,     ~decode,   # compact   \"SEXF\",   \"0=Male\\n1=Female\",                                                           # yes/no without single quotes   \"LGL\",    \"Y=Yes\\nN=No\",                                                                # yes/no with single quotes   \"LGLQ\",   \"'Y'=Yes\\n'N'=No\",                                                            # with spaces and numbers   \"AGEPED\", \"0=Neonate to 1 month\\n1=Infant: 1 month to 2 years\",                         # with parentheses in decode   \"MDV\",    \"0=PK or PD measure\\n1=Dose or Other(EVID=2)\",                                # with special characters and parentheses   \"RFCAT\",  \"1=Normal (>=90 mL/min)\\n2=Mild (60-89 mL/min)\\n3=Moderate (30-59 mL/min)\",   # item that does not include encoding   \"BAD\",    \"This is not a decode\"                                                      )  extract_decode_tbls(possible_decodes$var, possible_decodes$decode) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── LGL ── #>  #> N=No #> Y=Yes #>  #> ── LGLQ ── #>  #> N=No #> Y=Yes #>  #> ── AGEPED ── #>  #> 0=Neonate to 1 month #> 1=Infant: 1 month to 2 years #>  #> ── MDV ── #>  #> 0=PK or PD measure #> 1=Dose or Other(EVID=2) #>  #> ── RFCAT ── #>  #> 1=Normal (>=90 mL/min) #> 2=Mild (60-89 mL/min) #> 3=Moderate (30-59 mL/min)  possible_decodes |>    with(extract_decode_tbls(var, decode)) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── LGL ── #>  #> N=No #> Y=Yes #>  #> ── LGLQ ── #>  #> N=No #> Y=Yes #>  #> ── AGEPED ── #>  #> 0=Neonate to 1 month #> 1=Infant: 1 month to 2 years #>  #> ── MDV ── #>  #> 0=PK or PD measure #> 1=Dose or Other(EVID=2) #>  #> ── RFCAT ── #>  #> 1=Normal (>=90 mL/min) #> 2=Mild (60-89 mL/min) #> 3=Moderate (30-59 mL/min)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls_from_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract decode tables from data — extract_decode_tbls_from_data","title":"Extract decode tables from data — extract_decode_tbls_from_data","text":"Extract decode tables data","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls_from_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract decode tables from data — extract_decode_tbls_from_data","text":"","code":"extract_decode_tbls_from_data(.data, lvl_to_lbl = \"{var}C\")"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls_from_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract decode tables from data — extract_decode_tbls_from_data","text":".data data frame lvl_to_lbl named list, elements correspond matching names .data decode_tbls. One element can left unnamed provide default transformation. element either: (1) function/formula; (2) custom glue specification. default \"{var}C\", means label variable name level variable name appended \"C\".","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls_from_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract decode tables from data — extract_decode_tbls_from_data","text":"decode_tbls","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/extract_decode_tbls_from_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract decode tables from data — extract_decode_tbls_from_data","text":"","code":"dmcognigen_cov |>    extract_decode_tbls_from_data() #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── SEXF ── #>  #> 0=Male #> 1=Female #>  #> ── RFCAT ── #>  #> 2=Mild Impairment (60-89 mL/min) #> 3=Moderate Impairment (30-59 mL/min) #> NA=NA #>  #> ── NCILIV ── #>  #> 0=Normal Group A #> 1=Mild Group B1 #> 2=Mild Group B2 #> 3=Moderate Group C #>  #> ── RACE ── #>  #> AMERICAN INDIAN OR ALASKA NATIVE=American Indian or Alaska Native #> BLACK OR AFRICAN AMERICAN=Black/African American #> WHITE=White/Caucasian  dmcognigen_cov |>    extract_decode_tbls_from_data(     lvl_to_lbl = c(     # specify mapping from lvl to lbl by name     \"RACEN\" = \"RACE\",      # one unnamed, default mapping can be provided     ~ stringr::str_remove(.x, \"CD$\"))   ) #>  #> ── Decode tables ─────────────────────────────────────────────────────────────── #>  #> ── RACEN ── #>  #> 1=WHITE #> 2=BLACK OR AFRICAN AMERICAN #> 4=AMERICAN INDIAN OR ALASKA NATIVE #>  #> ── ARMCD ── #>  #> Pbo=Placebo #> Xan_Hi=Xanomeline High Dose #> Xan_Lo=Xanomeline Low Dose #>  #> ── ACTARMCD ── #>  #> Pbo=Placebo #> Xan_Hi=Xanomeline High Dose #> Xan_Lo=Xanomeline Low Dose"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/get_from_calculations_table.html","id":null,"dir":"Reference","previous_headings":"","what":"pull details from calculations_table based on provided arguments — get_from_calculations_table","title":"pull details from calculations_table based on provided arguments — get_from_calculations_table","text":"function mostly internal, used documentation therefore exported.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/get_from_calculations_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pull details from calculations_table based on provided arguments — get_from_calculations_table","text":"","code":"get_from_calculations_table(.var_name, .field)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/get_from_calculations_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pull details from calculations_table based on provided arguments — get_from_calculations_table","text":".var_name variable name extract field .field field extract","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/in_which.html","id":null,"dir":"Reference","previous_headings":"","what":"Find objects containing names — in_which","title":"Find objects containing names — in_which","text":"Find list objects whose names contain elements x. Note data.frame objects considered list objects.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/in_which.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find objects containing names — in_which","text":"","code":"in_which(x, envir = .GlobalEnv, ignore_case = TRUE)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/in_which.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find objects containing names — in_which","text":"x character vector matches elements sought. envir environment use listing available objects. Defaults global environment. can also list containing objects check. ignore_case logical representing whether ignore case.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/in_which.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find objects containing names — in_which","text":"returns named list character vectors containing   names list objects names matching x   invisibly returns NULL list objects   envir.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/in_which.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find objects containing names — in_which","text":"","code":"data(mtcars); in_which(\"cyl\") #> $cyl #> [1] \"mtcars\" #>   # check for common subject identifiers, explicitly defining case in_which(   c(\"ID\", \"SUBJECT\", \"SUBJID\", \"USUBJID\"),    ignore_case = FALSE ) #> $ID #> [1] \"dmcognigen_cov\" #>  #> $SUBJECT #> character(0) #>  #> $SUBJID #> [1] \"dmcognigen_cov\" #>  #> $USUBJID #> [1] \"dmcognigen_cov\" #>"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/join_decodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Join decode labels or levels — join_decodes","title":"Join decode labels or levels — join_decodes","text":"Join decode labels levels","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/join_decodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join decode labels or levels — join_decodes","text":"","code":"join_decode_labels(.data, decode_tbls, lvl_to_lbl = \"{var}C\", ...)  join_decode_levels(.data, decode_tbls, lvl_to_lbl = \"{var}C\", ...)  decode_tbls_lvl_to_lbl(decode_tbls, lvl_to_lbl = \"{var}C\")"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/join_decodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join decode labels or levels — join_decodes","text":".data data frame decode_tbls decode_tbls list returned extract_decode_tbls() extract_decode_tbls_from_data(). Alternatively, result read_requirements() can used directly. lvl_to_lbl named list, elements correspond matching names .data decode_tbls. One element can left unnamed provide default transformation. element either: (1) function/formula; (2) custom glue specification. default \"{var}C\", means label variable name level variable name appended \"C\". ... additional arguments (currently unused)","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/join_decodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join decode labels or levels — join_decodes","text":"data frame number rows .data. New   variables included matching content .data   decode_tbls.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/print.decode_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Print values of decode tables — print.decode_tbls","title":"Print values of decode tables — print.decode_tbls","text":"Print values decode tables","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/print.decode_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print values of decode tables — print.decode_tbls","text":"","code":"# S3 method for class 'decode_tbl' print(x, align = c(\"left\", \"center\", \"right\"), ...)  # S3 method for class 'decode_tbls' print(x, align = c(\"left\", \"center\", \"right\"), ...)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/print.decode_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print values of decode tables — print.decode_tbls","text":"x decode_tbl decode_tbls object. align string alignment output. Either \"left\" (default), \"center\" (aligns '='), \"right\". ... Passed print.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/print.search_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print search results — print.search_result","title":"Print search results — print.search_result","text":"Print search results","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/print.search_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print search results — print.search_result","text":"","code":"# S3 method for class 'search_result' print(x, ...)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/print.search_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print search results — print.search_result","text":"x search_result object ... Passed print.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/read_docx_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read tables from a Word file (docx) — read_docx_tables","title":"Read tables from a Word file (docx) — read_docx_tables","text":"Read tables Word file (docx)","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/read_docx_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read tables from a Word file (docx) — read_docx_tables","text":"","code":"read_docx_tables(path, docx_header_pattern = NULL, combine = TRUE, ...)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/read_docx_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read tables from a Word file (docx) — read_docx_tables","text":"path path Word file (docx). docx_header_pattern one patterns required table header names. Can character list containing combination character, regex, fixed patterns. case-insensitive, use regex. combine logical indicating whether combine tables one data frame return list tables. ... optional arguments passed read_docx.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/read_docx_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read tables from a Word file (docx) — read_docx_tables","text":"data frame combined = TRUE; list data frames   combined = FALSE.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/read_docx_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read tables from a Word file (docx) — read_docx_tables","text":"","code":"if (FALSE) { # \\dontrun{  # read and combine all tables from a docx. read_docx_tables(\"results.docx\")  # read and combine tables from a docx that match a pattern. read_docx_tables(   path = \"requirements.docx\",   docx_header_pattern = list(     stringr::regex(\"variable\", ignore_case = TRUE)   ) )  # optionally, read in with tracked changes accepted or rejected. read_docx_tables(   path = \"requirements.docx\",   track_changes = \"accept\" ) } # }"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available and latest data requirements files — requirements","title":"Get available and latest data requirements files — requirements","text":"family functions allows user explore, import,   leverage contents data requirements files. Supported files types   Excel files (xlsx, xls, xlsm) Word files (docx ). Note sheets   = NULL must used include docx files searches. read_requirements Read latest data requirements file. as_requirements Apply requirements attributes data frame. available_requirements_table Get available data requirements   files. Returns tibble including available data requirements paths   information.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available and latest data requirements files — requirements","text":"","code":"read_requirements(   path = \".\",   pattern = \"req\",   sheet = \"specs\",   docx_header_pattern = NULL,   date_format = c(\"ymd\", \"mdy\", \"dmy\"),   subset = NULL,   variable_name_col = \"variable_name\",   variable_label_col = \"variable_label\",   decode_col = \"format_decode\",   make_clean_names_fn = janitor::make_clean_names,   ... )  as_requirements(   .data,   variable_name_col = \"variable_name\",   variable_label_col = \"variable_label\",   decode_col = \"format_decode\" )  available_requirements_table(   path = \".\",   pattern = \"req\",   sheet = \"specs\",   date_format = c(\"ymd\", \"mdy\", \"dmy\"),   drop_qc = TRUE )"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/requirements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available and latest data requirements files — requirements","text":"path single directory path path data requirements file. read_requirements, providing directory path result latest matching data requirements file selected, providing file path result file selected. Defaults working directory. pattern character string containing regular expression. file names match regular expression returned. Defaults \"req\". sheet either character vector required Excel sheet name(s), numeric index sheet position, NULL (required sheet names, include docx files). one sheet name index provided read_requirements. Defaults \"specs\", `sheet = NULL` must used match latest docx file. docx_header_pattern one patterns required table header names. Can character list containing combination character, regex, fixed patterns. case-insensitive, use regex. date_format character indicating format date. Defaults year-month-day format \"ymd\". subset expression returns logical value defined terms imported requirements table (like filter). expression results error, error reported warning subset applied. example subset = pk_ard == \"x\", indicates subset variables marked inclusion PK Analysis Ready Dataset. variable_name_col, variable_label_col, decode_col character column names data requirements describe variable names, labels, decodes. match results transformations performed make_clean_names_fn. make_clean_names_fn function/formula cleans/transforms original variable names. Defaults make_clean_names. ... optional arguments passed either read.xlsx read_docx. .data data frame apply requirements attributes . drop_qc logical indicating whether remove versions data requirements used QC. identified patterns \"qc\" \"marked\" filename.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/requirements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available and latest data requirements files — requirements","text":"","code":"if (FALSE) { # \\dontrun{ # read the latest requirements file in the working directory, based on CPP defaults reqs <- read_requirements()  # specify a particular file and sheet reqs <- read_requirements(path = \"requirements.xlsx\", sheet = 1)  # read the latest docx requirements file reqs <- read_requirements(   pattern = \"req.*docx\",   sheet = NULL,    docx_header_pattern = stringr::regex(\"variable\", ignore_case = TRUE) )  # apply attributes to an existing data frame reqs <- as_requirements(reqs_df)  # get all available requirements files available_requirements_table()  # include docx files in search available_requirements_table(sheet = NULL)  # only include requirements with a specs sheet available_requirements_table(sheet = \"specs\")  # include QC versions available_requirements_table(drop_qc = FALSE) } # }"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/search_environment_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Search data in an environment for a pattern — search_environment_data","title":"Search data in an environment for a pattern — search_environment_data","text":"Searches variable names, variable labels, variable content.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/search_environment_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search data in an environment for a pattern — search_environment_data","text":"","code":"search_environment_data(   pattern,   envir = .GlobalEnv,   search_variable_names = TRUE,   search_variable_labels = TRUE,   search_variable_content = TRUE )"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/search_environment_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search data in an environment for a pattern — search_environment_data","text":"pattern pattern search . Can regex, fixed, single character pattern. envir environment named list search within. search_variable_names, search_variable_labels, search_variable_content logical values indicating whether search category.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/search_environment_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search data in an environment for a pattern — search_environment_data","text":"search_result object.","code":""},{"path":[]},{"path":"https://simulations-plus.github.io/dmcognigen/reference/search_environment_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search data in an environment for a pattern — search_environment_data","text":"","code":"data(mtcars) search_environment_data(\"cyl\") #>  #> ── Search results ────────────────────────────────────────────────────────────── #>  #> ── mtcars ── #>  #> ✔ Variable names: cyl  data(dmcognigen_cov) study_search <- search_environment_data(   stringr::regex(\"study\", ignore_case = TRUE) ) study_search #>  #> ── Search results ────────────────────────────────────────────────────────────── #>  #> ── dmcognigen_cov ── #>  #> ✔ Variable names: STUDYID #> ✔ Variable labels: STUDYID, SUBJID, RFXSTDTC, RFXENDTC, SITEID, and DMDY  cnt_search_result(study_search, n_distinct_vars = \"SUBJID\") #> $dmcognigen_cov #> # A tibble: 254 × 7 #>    STUDYID      RFXSTDTC   RFXENDTC   SITEID  DMDY n_SUBJID     n #>    <chr>        <chr>      <chr>      <chr>  <dbl>    <int> <int> #>  1 CDISCPILOT01 2012-07-09 2013-01-20 716       -3        1     1 #>  2 CDISCPILOT01 2012-07-20 2013-01-11 703      -10        1     1 #>  3 CDISCPILOT01 2012-07-22 2013-01-20 701      -14        1     1 #>  4 CDISCPILOT01 2012-07-29 2013-02-10 711       -9        1     1 #>  5 CDISCPILOT01 2012-07-31 2012-08-28 709      -10        1     1 #>  6 CDISCPILOT01 2012-08-05 2012-09-01 701      -14        1     1 #>  7 CDISCPILOT01 2012-08-30 2012-11-04 704       -7        1     1 #>  8 CDISCPILOT01 2012-09-02 2012-12-04 703      -11        1     1 #>  9 CDISCPILOT01 2012-09-07 2012-09-16 701      -13        1     1 #> 10 CDISCPILOT01 2012-09-07 2013-02-01 705       -5        1     1 #> # ℹ 244 more rows #>"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_decode_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Create factor variables based on decodes — set_decode_factors","title":"Create factor variables based on decodes — set_decode_factors","text":"Create factor variables based decodes","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_decode_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create factor variables based on decodes — set_decode_factors","text":"","code":"set_decode_factors(.data, decode_tbls, new_names = NULL, ...)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_decode_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create factor variables based on decodes — set_decode_factors","text":".data data frame decode_tbls decode_tbls list returned extract_decode_tbls() extract_decode_tbls_from_data(). Alternatively, result read_requirements() can used directly. new_names NULL update -place named list, elements correspond matching names .data decode_tbls. One element can left unnamed provide default transformation. element either: (1) function/formula; (2) custom glue specification, like \"{var}CAT\" create new variable original variable name appended \"CAT\" categorical. default NULL, update -place. ... additional arguments (currently unused)","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_decode_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create factor variables based on decodes — set_decode_factors","text":"data frame number rows .data. New/modified   variables included matching content .data   decode_tbls.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_decode_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create factor variables based on decodes — set_decode_factors","text":"","code":"# create factors in-place dmcognigen_cov |>    set_decode_factors(dmcognigen_pk_requirements) |>   cnt(SEXF, RACEN) #> ✔ Modified variable `NCILIV` as a factor of `NCILIV`. #> ✔ Modified variable `RACEN` as a factor of `RACEN`. #> ✔ Modified variable `RFCAT` as a factor of `RFCAT`. #> ✔ Modified variable `SEXF` as a factor of `SEXF`. #> # A tibble: 5 × 4 #>   SEXF   RACEN                                n n_cumulative #>   <fct>  <fct>                            <int>        <int> #> 1 Male   White/Caucasian                    104          104 #> 2 Male   Black/African American               6          110 #> 3 Male   American Indian or Alaska Native     1          111 #> 4 Female White/Caucasian                    126          237 #> 5 Female Black/African American              17          254  # or use a mapping convention to define new names dmcognigen_cov |>    cnt(SEXF, RACEN) |>   set_decode_factors(dmcognigen_pk_requirements, new_names = c(SEXF = \"SEXFCAT\")) #> ✔ Created new variable `SEXFCAT` as a factor of `SEXF`. #> # A tibble: 5 × 5 #>    SEXF RACEN     n n_cumulative SEXFCAT #>   <dbl> <dbl> <int>        <int> <fct>   #> 1     0     1   104          104 Male    #> 2     0     2     6          110 Male    #> 3     0     4     1          111 Male    #> 4     1     1   126          237 Female  #> 5     1     2    17          254 Female     dmcognigen_cov |>    cnt(SEXF, RACEN) |>   set_decode_factors(dmcognigen_pk_requirements, new_names = \"{var}CAT\") #> ✔ Created new variable `RACENCAT` as a factor of `RACEN`. #> ✔ Created new variable `SEXFCAT` as a factor of `SEXF`. #> # A tibble: 5 × 6 #>    SEXF RACEN     n n_cumulative RACENCAT                         SEXFCAT #>   <dbl> <dbl> <int>        <int> <fct>                            <fct>   #> 1     0     1   104          104 White/Caucasian                  Male    #> 2     0     2     6          110 Black/African American           Male    #> 3     0     4     1          111 American Indian or Alaska Native Male    #> 4     1     1   126          237 White/Caucasian                  Female  #> 5     1     2    17          254 Black/African American           Female"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Set variable labels — set_labels","title":"Set variable labels — set_labels","text":"Set variable labels","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set variable labels — set_labels","text":"","code":"set_labels(data, labels = list(), ...)  set_labels(data, ...) <- value"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set variable labels — set_labels","text":"data data.frame tibble labels, value either named list character vector, requirements object, data frame labelled variables. Additionally, NULL can used remove variable labels. ... named pairs name corresponds one variable data value either variable label source inherit label . label kept element labels.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set variable labels — set_labels","text":"object structure data label attributes   assigned variables provided labels ....","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/set_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set variable labels — set_labels","text":"","code":"# remove all variable labels for examples pk_no_labels <- dmcognigen_pk |>   set_labels(NULL)  # with a requirements object pk_with_labels <- pk_no_labels |>   set_labels(dmcognigen_pk_requirements) #> ℹ Inheriting labels from `dmcognigen_pk_requirements` <requirements> object.  # with another data set pk_with_labels <- pk_no_labels |>   set_labels(dmcognigen_pk) #> ℹ Inheriting labels from variables in `dmcognigen_pk` <data.frame>.    # by providing individual variable labels with `...` pk_with_labels <- pk_no_labels |>   set_labels(ID = \"ID\")  # or any combination pk_with_labels <- pk_no_labels |>   set_labels(dmcognigen_pk_requirements, USUBJID = dmcognigen_cov, ID = \"ID\") #> ℹ Inheriting labels from `dmcognigen_pk_requirements` <requirements> object. #> ℹ Inheriting labels from variables in `dmcognigen_cov` <data.frame>.  # apply labels from multiple datasets by using the function multiple times pk_with_labels <- pk_no_labels |>   set_labels(dmcognigen_cov) |>   set_labels(dmcognigen_dose) |>   set_labels(dmcognigen_conc) #> ℹ Inheriting labels from variables in `dmcognigen_cov` <data.frame>. #> ℹ Inheriting labels from variables in `dmcognigen_dose` <data.frame>. #> ℹ Inheriting labels from variables in `dmcognigen_conc` <data.frame>."},{"path":"https://simulations-plus.github.io/dmcognigen/reference/stationary_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset to stationary content (one row per group) — stationary_variables","title":"Subset to stationary content (one row per group) — stationary_variables","text":"distinct_stationary_variables() subsets data one row per group containing variables constant groups. stationary_variables() returns names variables. main difference compared distinct function keeps stationary variables, distinct keeps either variables ... variables.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/stationary_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset to stationary content (one row per group) — stationary_variables","text":"","code":"distinct_stationary_variables(.data, ...)  stationary_variables(.data, ...)"},{"path":"https://simulations-plus.github.io/dmcognigen/reference/stationary_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset to stationary content (one row per group) — stationary_variables","text":".data data frame ... grouping variables use determine whether variables stationary. omitted, subset variables stationary throughout entire data frame. existing groups ignored.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/stationary_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset to stationary content (one row per group) — stationary_variables","text":"object type .data fewer equal   columns, fewer equal rows, groups.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/reference/stationary_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset to stationary content (one row per group) — stationary_variables","text":"","code":"library(dplyr)  # already one row per group, no change. identical(   dmcognigen_cov,   dmcognigen_cov |>     distinct_stationary_variables(USUBJID) ) #> distinct_stationary_variables: no variables removed #> distinct_stationary_variables: no rows removed #> [1] TRUE  # all constant variables (no groups) dmcognigen_cov |>   distinct_stationary_variables() #> distinct_stationary_variables: removed 46 variables (USUBJID, ID, RACEN, …, DMDTC, and DMDY) #> distinct_stationary_variables: removed 253 rows, 1 row remaining #> # A tibble: 1 × 7 #>   DOMAIN STUDYID      TBILULN EGFRSCHW RFICDTC AGEU  COUNTRY #>   <chr>  <chr>          <dbl>    <dbl> <chr>   <chr> <chr>   #> 1 DM     CDISCPILOT01     1.2       NA NA      YEARS USA      # names of all constant variable within groups dmcognigen_cov |>   stationary_variables(RACEN, SEXF) #>  [1] \"DOMAIN\"   \"STUDYID\"  \"RACEN\"    \"RACEC\"    \"SEXF\"     \"SEXFC\"    #>  [7] \"ASTULN\"   \"SCRULN\"   \"TBILULN\"  \"EGFRSCHW\" \"RFICDTC\"  \"AGEU\"     #> [13] \"SEX\"      \"RACE\"     \"COUNTRY\"   # magrittr pipe lets us pass data as `.` # so we can modify data in a pipeline and reference the resulting stationary variables. dmcognigen_dose %>%   select(1:10) %>%   cnt(across(stationary_variables(.)), n_distinct_vars = USUBJID) #> # A tibble: 1 × 10 #>   DOMAIN STUDYID       DVID DVIDC  EVID   MDV ROUTE n_USUBJID     n n_cumulative #>   <chr>  <chr>        <dbl> <chr> <dbl> <dbl> <chr>     <int> <int>        <int> #> 1 EX     CDISCPILOT01     0 Dose      1     1 TRAN…       254   591          591  # or can reference the stationary variables in another data frame. #  # count all stationary dose-related variables dmcognigen_pk %>%   select(STUDYID, USUBJID, any_of(stationary_variables(dmcognigen_dose))) %>%   cnt(across(stationary_variables(., DVID)), n_distinct_vars = USUBJID) #> # A tibble: 2 × 14 #>   STUDYID  DOMAIN  DVID DVIDC  EVID   MDV ROUTE EXDOSU EXDOSFRM EXDOSFRQ EXROUTE #>   <chr>    <chr>  <dbl> <chr> <dbl> <dbl> <chr> <chr>  <chr>    <chr>    <chr>   #> 1 CDISCPI… EX         0 Dose      1     1 TRAN… mg     PATCH    QD       TRANSD… #> 2 CDISCPI… PC         1 Xano…     0     0 TRAN… NA     NA       NA       NA      #> # ℹ 3 more variables: n_USUBJID <int>, n <int>, n_cumulative <int>  # count all stationary concentration-related variables dmcognigen_pk %>%   select(STUDYID, USUBJID, any_of(stationary_variables(dmcognigen_conc))) %>%   cnt(across(stationary_variables(., DVID)), n_distinct_vars = USUBJID) #> # A tibble: 2 × 19 #>   STUDYID DOMAIN  DVID DVIDC  EVID   MDV  LLOQ PCTESTCD PCTEST PCORRESU PCSTRESU #>   <chr>   <chr>  <dbl> <chr> <dbl> <dbl> <dbl> <chr>    <chr>  <chr>    <chr>    #> 1 CDISCP… EX         0 Dose      1     1 NA    NA       NA     NA       NA       #> 2 CDISCP… PC         1 Xano…     0     0  0.01 XAN      XANOM… ug/ml    ug/ml    #> # ℹ 8 more variables: PCNAM <chr>, PCSPEC <chr>, PCLLOQ <dbl>, VISIT <chr>, #> #   VISITNUM <dbl>, n_USUBJID <int>, n <int>, n_cumulative <int>"},{"path":"https://simulations-plus.github.io/dmcognigen/news/index.html","id":"dmcognigen-development-version","dir":"Changelog","previous_headings":"","what":"dmcognigen (development version)","title":"dmcognigen (development version)","text":"Added set_decode_factors() function modify create new factor variables based decode_tbls. Added distinct_stationary_variables() subset one row per group stationary_variables() collect names variables. Updated set_labels() accept data sets sources inherit labels accept labels individual variable names. Updated example data sets dmcognigen_cov dmcognigen_conc use source data {pharmaversesdtm} package. Added example data sets dmcognigen_dose, dmcognigen_pk, dmcognigen_pk_requirements. Added support reading tables Word files read_docx_tables() read_requirements(). Added method apply requirements attributes existing data frame as_requirements(). Fixed bug search_environment_data() evaluating objects data frames resulted error. Updated search_environment_data() search type optional. Updated cnt_search_result() optionally ignore results name.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/news/index.html","id":"dmcognigen-011","dir":"Changelog","previous_headings":"","what":"dmcognigen 0.1.1","title":"dmcognigen 0.1.1","text":"Fixed bug read_requirements() file oldest date selected instead recent date. Updated print method decode_tbls decode tables consistently arranged. Added new functions search_environment_data() cnt_search_result() searching dataset contents, variable names, variable labels.","code":""},{"path":"https://simulations-plus.github.io/dmcognigen/news/index.html","id":"dmcognigen-010","dir":"Changelog","previous_headings":"","what":"dmcognigen 0.1.0","title":"dmcognigen 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
